@model IEnumerable<EDU.Web.ViewModels.Trainer.TrainingConfirmationVM>

@{
    ViewBag.Title = "TrainingConfirmationList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    WebGrid grid = new WebGrid(Model, rowsPerPage: 10, ajaxUpdateContainerId: "grid");
    grid.Pager(WebGridPagerModes.All);
}

@functions {
    public string TypeColumn(bool isPrivate, bool isPublic)
    {
        if (isPrivate)
            return "Private";
        else if (isPublic)
            return "Public";
        return "";
    }
}
<style>
    .bordertop {
        border-top: 2px solid gray !important;
        border-bottom: 2px solid gray !important;
        color: #D73925;
        font-family: 'Bebas Neue'
    }

    .popover {
        color: black;
        min-width: 500px;
    }

    .popover-title {
        background-color: #F7F7F7;
        border-bottom: 1px solid #EBEBEB;
        border-radius: 5px 5px 0 0;
        font-size: 15px;
        font-weight: bold;
        line-height: 18px;
        margin: 0;
        padding: 8px 14px;
    }

    .center {
        text-align: center !important;
    }

    .action {
        width: 50px;
    }
</style>
<div class="page">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Training Confirmation List</h4>
                    <div class="box-tools">
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {
                            <button type="button" class="btn btn-info btn-sm waves-effect" data-toggle="modal" onclick="TrainerConfirmation()"><i class="fa fa-plus"></i>Add Trainer Confirmation</button>
                        }
                    </div>
                </div>
                <div class="box-body">
                    <div class="" style="overflow-x: scroll; width: 100%">
                        @grid.GetHtml(
                                columns: grid.Columns(
                    grid.Column("TrainingConfirmationID", "Order No.", canSort: true),
                    grid.Column("ProductName", "Product Name", canSort: true,
                                format:
                                @<text>
                                    <div style='width:110px;'>
                                        @item.ProductName
                                    </div>
                                </text>),
                    grid.Column("CourseName", "Course Name", canSort: true,
                                format:
                                @<text>
                                    <div style='width:140px;'>
                                        @if (item.CourseName.ToString().Length > 20)
                                        { <a style="cursor:pointer;text-decoration:underline;">
                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Course Name" data-content="@(item.CourseName)" data-original-title="" title="">@item.CourseName.ToString().Substring(0, 20)...</span>
                                        </a>
                                        }
                                        else
                                        {
                                            <span>@item.CourseName</span>
                                        }
                                    </div>
                                </text>),
                    grid.Column("NoOfStudents", "No Of Students", canSort: true,
                                format:
                                @<text>
                                    <div style='width:100px;'>
                                        @item.NoOfStudents
                                    </div>
                                </text>, style: "center"),
                    grid.Column("Private", "Type", format: @<text>@TypeColumn(item.Private, item.Public)</text>, canSort: true),
                    grid.Column("StartDate", "Start Date", format:@<text> @item.StartDate.ToString("MM/dd/yyyy")</text>, canSort: true),
                    grid.Column("EndDate", "End Date", format:@<text> @item.EndDate.ToString("MM/dd/yyyy")</text>, canSort: true),
                    grid.Column("TotalNoOfDays", "Total # of days", canSort: true,
                                format:
                                @<text>
                                    <div style='width:100px;'>
                                        @item.TotalNoOfDays
                                    </div>
                                </text>, style: "center"),
                    grid.Column("TrianerName", "Trianer Name", canSort: true),
                    grid.Column("", "#Action", canSort: false,
                                format:
                                @<text>
                                    @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                    {
                                        <button class="btn btn-xs btn-success waves-effect" onclick="EditTrainerConfirmation(@item.Id)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                        <button class="btn btn-xs btn-danger waves-effect" onclick="DeletetrainingConf(@item.Id)"><i class="fa fa-trash-o" style="padding-left: 5px;"></i></button>
                                    }
                                </text>)),
                                tableStyle: "table")
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="pull-right">@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("DeletetrainingConf", "Trainer", FormMethod.Post, new { id = "frmDelete", name = "frmDelete" }))
{
    <input type="hidden" id="id" name="id" />
}
@using (Html.BeginForm("SaveTrainingConfirmation", "Trainer", FormMethod.Post, new { id = "frmTrainerConfirmation", name = "frmTrainerConfirmation" }))
{
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}
@section SectionScripts{
    <script type="text/javascript">
        function TrainerConfirmation() {
            debugger;
            $.ajax({
                url: '@Url.Content("~/Trainer/TrainerConfirmation")',
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            });
        }
        function EditTrainerConfirmation(Id) {
            $.ajax({
                url: '@Url.Content("~/Trainer/TrainerConfirmation?Id=")' + Id,
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            })
        }

        function DeletetrainingConf(Id) {
            if (confirm("Are you sure, do you want delete?")) {
                $('#id').val(Id);
                $('#frmDelete').submit();
            }
        }

        function SaveTrainingConfirmation() {
            if ($('#frmTrainerConfirmation').valid()) {
                $('#Private').val($('#rdoPrivate').is(':checked'));
                $('#Public').val($('#rdoPublic').is(':checked'));
                $('#frmTrainerConfirmation').submit();
            }
        }
        $('#frmTrainerConfirmation').validate({
            rules: {
                Product: {
                    required: true
                },
                Course: {
                    required: true
                },
                TotalNoOfDays: {
                    required: true
                },
                StartDate: {
                    required: true
                },
                EndDate: {
                    required: true
                },
                NoOfStudents: {
                    required: true
                },
                TrianerId: {
                    required: true
                }

            }
        })

        function mouseleave(el) {
            $(el).popover("hide");
        }

        function mouseover(el) {
            $(el).popover("show");
        }
    </script>

}