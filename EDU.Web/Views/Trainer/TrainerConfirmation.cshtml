@model EDU.Web.Models.TrainingConfirmation
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">TrainerConfirmation</h4>
        </div>
        <div class="modal-body" id="TrainerConfirmationModalBody">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.TrainingConfirmationID)
            @Html.HiddenFor(x => x.IsActive)
            <div class="row">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">Order No</span>
                    </label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(x => x.TrainingConfirmationID, new { @class = "form-control", placeholder = "Order No", @disabled="disabled" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">Product</span>
                    </label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(x => x.Product,
                    new SelectList((List<EZY.EDU.Contract.EduProduct>)ViewData["ProductData"], "Id", "ProductName"),
                    "Select Product", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">Course Name</span>
                    </label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(x => x.Course,
                    new SelectList((List<EZY.EDU.Contract.CourseVm>)ViewData["CourseData"], "Id", "CourseName"),
                    "Select Course", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">Number of Students</span>
                    </label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(x => x.NoOfStudents, new { @class = "form-control numCss", placeholder = "Number of Students" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">Type</span>
                    </label>
                    <div class="col-md-4">
                        <input type="radio" name="type" id="rdoPrivate" title="Private" checked="@Model.Private" />
                        @Html.Label("Private")&nbsp;&nbsp;&nbsp;&nbsp;
                        <input type="radio" name="type" id="rdoPublic" title="Public" checked="@Model.Public" />
                        @Html.Label("Public")
                        @Html.HiddenFor(x =>x.Private)
                        @Html.HiddenFor(x =>x.Public)
                        @*<label>Private</label>&nbsp;&nbsp;
                        @Html.CheckBoxFor(x => x.Private, new { name = "type" })
                        <label>Public</label>&nbsp;&nbsp;
                        @Html.CheckBoxFor(x => x.Public, new { name = "type" })*@
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">Start Date</span>
                    </label>
                    <div class="col-md-4">
                        <div class="input-group date" id="StartDt">
                            @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control dtCss" })
                            <span class="input-group-addon">
                                <i class="ion ion-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">End Date</span>
                    </label>
                    <div class="col-md-4">
                        <div class="input-group date" id="StartDt">
                            @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control dtCss" })
                            <span class="input-group-addon">
                                <i class="ion ion-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label">
                        <span class="pull-right">Total # of days</span>
                    </label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(x => x.TotalNoOfDays, new { @class = "form-control numCss", placeholder = "Total # of days" })
                    </div>
                </div>
            </div>
            <div class="modal-footer css10">
                <button type="button" onclick="SaveTrainingConfirmation()" class="btn btn-success btn-frmt btn-sm"> <i class="fa fa-floppy-o"></i>&nbsp;Submit</button>
                <button type="button" class="btn btn-default btn-frmt btn-sm" data-dismiss="modal"><i class="fa fa-times"></i>Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $('#StartDt, #RegClosingDt').datetimepicker({
            icons: {
                time: 'fa fa-clock-o',
                date: 'fa fa-calendar',
                up: 'fa fa-arrow-up',
                down: 'fa fa-arrow-down'
            },
            minDate: new Date(),
            format: 'DD/MM/YYYY'
        });

        $('#EndDt').datetimepicker({
            useCurrent: false, //Important! See issue #1075
            icons: {
                time: 'fa fa-clock-o',
                date: 'fa fa-calendar',
                up: 'fa fa-arrow-up',
                down: 'fa fa-arrow-down'
            },
            format: 'DD/MM/YYYY'
        });
    });
</script>



