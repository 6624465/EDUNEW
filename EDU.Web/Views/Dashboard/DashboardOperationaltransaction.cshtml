@using Newtonsoft.Json;
@model IEnumerable<EDU.Web.ViewModels.OperationalTransaction.OperationalTransactionReportByMonth>
@{
    ViewBag.Title = "DashboardOperationaltransaction";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var CountryData = (List<EZY.EDU.Contract.Branch>)ViewData["CountryData"];

    var particularsData = (List<EDU.Web.Models.Lookup>)ViewData["ParticularsData"];
}
@{

    var listMonths = new List<SelectListItem>()
                    {
                    new SelectListItem {Text = "January",   Value = "1"},
                    new SelectListItem {Text = "February", Value = "2"},
                    new SelectListItem {Text = "March", Value = "3"},
                    new SelectListItem {Text = "April",   Value = "4"},
                    new SelectListItem {Text = "May", Value = "5"},
                    new SelectListItem {Text = "June", Value = "6"},
                    new SelectListItem {Text = "July",   Value = "7"},
                    new SelectListItem {Text = "August", Value = "8"},
                    new SelectListItem {Text = "September", Value = "9"},
                    new SelectListItem {Text = "October",   Value = "10"},
                    new SelectListItem {Text = "November", Value = "11"},
                    new SelectListItem {Text = "December", Value = "12"}
                };
}
<style>
    .round {
        border-radius: 10px;
        width: 10px;
    }
</style>
<div class="page page-forms-elements">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Dashboard Operational transaction</h4>
                    <div class="box-tools">
                    </div>
                </div>

                <div class="box-body">
                    <div class="row col-md-offset-1">
                        <div class="form-group">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Year</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Year, Enumerable.Range(2014, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:60%" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Month</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Month, listMonths, new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:70%" })
                            </div>
                        </div>
                    </div>
                    <div class="row css25">
                        <div class="col-md-9">

                            <div class="row">
                                <div class="col-md-4 allotspace">
                                    <div id="container0"></div>
                                </div>
                                <div class="col-md-4 allotspace">
                                    <div id="container1"></div>
                                </div>
                                <div class="col-md-4 allotspace">
                                    <div id="container4"></div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="col-md-4 allotspace col-md-offset-1">
                                    <div id="container8"></div>
                                </div>
                                <div class="col-md-4 allotspace">
                                    <div id="container5"></div>
                                </div>
                                <div class="col-md-4 allotspace">
                                    <div id="container6"></div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="col-md-4 allotspace">
                                    <div id="container9"></div>
                                </div>
                                <div class="col-md-4 allotspace">
                                    <div id="container3"></div>
                                </div>
                                <div class="col-md-4 allotspace">
                                    <div id="container7"></div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="col-md-4 allotspace">
                                    <div id="container2"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="row">
                                <div id="legend">
                                    <div><h4>Particulars</h4></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .allotspace {
        margin-left: 0px;
        border: 1px solid #d2d6de;
    }
    /*.highcharts-legend-item highcharts-pie-series
    {
        display:none;
    }*/
    .highcharts-button-symbol {
        display: none;
    }

    .highcharts-credits {
        display: none;
    }

    .highcharts-data-label-connector {
        display: none !important;
    }
</style>
@section SectionScripts{
    <script type="text/javascript">

        function ChangeMonth() {
            window.location = '@Url.Action("DashboardOperationaltransaction", "Dashboard", new { month = "", year = "" })' + '?month=' + $('#Month').val() + "&year=" + $('#Year').val();
        };

        $(function () {
            $('#liDashboardDashboardOperationaltransaction').addClass('active');

            //Highcharts.setOptions({
            //    colors: ['#418CF0', '#FCB441', '#E0400A', '#056492', '#1A3B69', '#0000FF',
            //            '#8A2BE2', '#A52A2A', '#DEB887', '#5F9EA0', '#D2691E', '#FF7F50',
            //            '#6495ED', '#DC143C', '#00FFFF', '#00008B', '#008B8B', '#B8860B',
            //            '#006400', '#8B008B', '#556B2F', '#FF8C00', '#8B0000', '#FF1493',
            //            '#1E90FF', '#B22222', '#228B22', '#008000', '#4B0082', '#F08080',
            //            '#00FF00', '#0000CD', '#FF4500', '#800080', '#9ACD32', '#008080'
            //    ]
            //});
            var getColor = {
                'SALARIES': '#418CF0',
                'TRAVELLING EXPENSES': '#FCB441',
                'RENTAL': '#E0400A',
                'TELEPHONE EXPENSES': '#056492',
                'COURIER CHARGES': '#1A3B69',
                'INSURANCE': '#0000FF',
                'UTILITY': '#8A2BE2',
                'MARKETING EXPENSES': '#A52A2A',
                'DEPRECIATION': '#DEB887',
                'LEGAL EXPENSES/CONSULTANCY': '#5F9EA0',
                'REPAIR & MAINTENANCE': '#D2691E',
                'BANK CHARGES': '#FF7F50',
                'PRINTING & STATIONERY': '#6495ED',
                'STAFF WELFARE': '#DC143C',
                'OTHER EXPENSES/INCOME': '#00FFFF'
            };
            var fillStyles = ['#418CF0', '#FCB441', '#E0400A', '#056492', '#1A3B69', '#0000FF',
                '#8A2BE2', '#A52A2A', '#DEB887', '#5F9EA0', '#D2691E', '#FF7F50',
                '#6495ED', '#DC143C', '#00FFFF', '#00008B', '#008B8B', '#B8860B',
                '#006400', '#8B008B', '#556B2F', '#FF8C00', '#8B0000', '#FF1493',
                '#1E90FF', '#B22222', '#228B22', '#008000', '#4B0082', '#F08080',
                '#00FF00', '#0000CD', '#FF4500', '#800080', '#9ACD32', '#008080',
            ];

             var myArray = @Html.Raw(JsonConvert.SerializeObject(particularsData));
            var $container = $("#legend");
            for (var i = 0; i < @particularsData.Count(); i++) {
                $container.append('<div class="row css10" style="height: 20px; padding-left:15px;" ><div class="col-md-1 round" style="height: 20px; background:' + fillStyles[i] + ';" id="answerdiv' + $container.children().length + '"><div class="col-md-11" style="padding-left:35px; white-space:nowrap"><b>' + myArray[i].LookupDescription + '</b></div></div></div>');
            }

            var count = 0;
            @foreach (var item in CountryData)
            {
            <text>
            Highcharts.chart('container' + count, {
                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false,
                    type: 'pie',
                    options3d: {
                        enabled: true,
                        alpha: 65,
                        beta: 0
                    },

                },
                title: {
                    text: '@item.BranchName'
                },
                tooltip: {
                    pointFormat: '<b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        depth: 60,
                        dataLabels: {
                            enabled: false
                        },
                        showInLegend: false
                    }
                },
                series: [{
                    name: 'Brands',
                    //colorByPoint: true,
                    data: [
                @foreach (var info in Model.Where(x=>x.Country==item.BranchID).ToList())
                        {
                            <text>
                {
                    name:'@info.ParticularName',
                    y:@info.Amount,
                    sliced: true,
                    selected:true,
                    color: getColor['@info.ParticularName']
                },
                </text>
                            }
                    ]
                }]
            });



            count++;
            </text>
                }
        });
    </script>
}

