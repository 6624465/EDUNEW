@model IEnumerable<EDU.Web.ViewModels.FinancialTransactionModel.FinancialTransactionsVM>
@{
    ViewBag.Title = "ProfitAndLoss";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var listMonths = new List<SelectListItem>()
                                          {
                                           new SelectListItem {Text = "All",   Value = "0"},
                                           new SelectListItem {Text = "January",   Value = "1"},
                                           new SelectListItem {Text = "February", Value = "2"},
                                           new SelectListItem {Text = "March", Value = "3"},
                                           new SelectListItem {Text = "April",   Value = "4"},
                                           new SelectListItem {Text = "May", Value = "5"},
                                           new SelectListItem {Text = "June", Value = "6"},
                                           new SelectListItem {Text = "July",   Value = "7"},
                                           new SelectListItem {Text = "August", Value = "8"},
                                           new SelectListItem {Text = "September", Value = "9"},
                                           new SelectListItem {Text = "October",   Value = "10"},
                                           new SelectListItem {Text = "November", Value = "11"},
                                           new SelectListItem {Text = "December", Value = "12"}
                                       };
}
<style>
    .highcharts-button-symbol {
        display: none !important;
    }

    .highcharts-legend {
        display: none !important;
    }

    .highcharts-credits {
        display: none !important;
    }

    .highcharts-axis-title {
        display: none !important;
    }

    .dot {
        height: 15px;
        width: 15px;
        border-radius: 50%;
        display: inline-block;
    }
</style>
<div class="page page-forms-elements">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Profit And Loss</h4>
                    <div class="box-tools">
                        <button type="button" class="btn btn-primary btn-sm waves-effect" data-toggle="modal" onclick="PrintProfitAndLossReport()"><i class="fa fa-print"></i>Print</button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Country</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Country,
                                     new SelectList((List<EZY.EDU.Contract.Branch>)ViewData["CountryData"], "BranchId", "BranchName"),
                                     new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Year</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Year, Enumerable.Range(2014, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:60%" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Month</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Month, listMonths, new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:70%" })
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="col-md-12">
                        <div class="row">
                            <div id="container">
                            </div>
                        </div>
                        <div class="row">
                            <div class="dot" style="background-color: blue;"><span style="padding-left:30px;font-size:10pt">Revenue</span></div>
                            <br />
                            <div class="dot css5" style="background-color: orange;"><span style="padding-left:30px;font-size:10pt">Expenses</span></div>
                            <br />
                            <div class="dot css5" style="background-color: forestgreen;"><span style="padding-left:30px;font-size:10pt">Profit</span></div>
                            <br />
                            <div class="dot css5" style="background-color: red;"><span style="padding-left:30px;font-size:10pt">Loss</span></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="myModal" class="modal fade" role="dialog">
</div>
@section SectionScripts {
    <script type="text/javascript">
        $(function () {
            $('#liDashboardProfitandloss').addClass('active');
            @if (Session["RoleCode"].ToString() != "ADMIN" && Session["UserID"].ToString().ToUpper() != "ACCSG" && Session["UserID"].ToString().ToUpper() != "MGMTSG")
            {
                <text>
            $('#Country').attr('disabled', 'disabled');
            </text>
            }
        });

        function ChangeMonth() {
            window.location = '@Url.Action("ProfitAndLoss", "Dashboard", new { month = "", year = "", country = "" })' + '?month=' + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val();
        };

        function PrintProfitAndLossReport() {
            var year = $('#Year').val();
            var month = $('#Month').val() == 0 ? '' : $('#Month').val();
            debugger;
            $.ajax({
                url: '@Url.Content("~/Report/ProfitAndLossReport?country=")' + $('#Country').val() + '&year=' + year + '&month=' + month,
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {
                }
            });
        }

        Highcharts.chart('container', {
            chart: {
                type: 'column',
            },
            title: {
                text: ''
            },
            tooltip: {
                formatter: function () {
                    return '$ ' + this.y;
                }
            },
            xAxis: [
                    {
                        type: 'category',
                        location: 'bottom',
                        categories: [
                             @foreach (var item in Model)
                        {
                            <text>
                                '@item.TrainingConfirmationID',
                            </text>
                            }
                        ],
                        labels: {
                            font: '8px sans-serif',
                            rotation: -90
                        }
                    }
            ],
            series: [{
                name: 'revenue',
                color: "blue",
                data: [
                    @foreach (var item in Model)
                    {
                        <text>
                            @item.TotalRevenueAmount.Value,
                        </text>
                    }
                ]
            },
         {
             name: 'Expenses',
             color: "orange",
             data: [
             @foreach (var item in Model)
                    {
                        <text>
                         @(item.TrainerExpensesAmount + item.TrainerTravelExpensesAmount + item.LocalExpensesAmount + item.CoursewareMaterialAmount + item.MiscExpensesAmount + item.TrainerClaimsAmount),
                     </text>
                }]
         },
         {
             name: 'profit',
             color: "green",
             data: [
             @foreach (var item in Model)
                    {
                        <text>
                         @(item.GrossProfit > 0?item.GrossProfit : 0),
                     </text>
                    }]
         },
            {
                name: 'loss',
                color: "red",
                data: [@foreach (var item in Model)
                    {
                        <text>
                            @(item.GrossProfit < 0?item.GrossProfit : 0),
                        </text>
                    }
                ]
            }
            ]
        });
    </script>
}

