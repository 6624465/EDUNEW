@using Newtonsoft.Json;
@model IEnumerable<EDU.Web.ViewModels.FinancialTransactionModel.FinancialTransactionsVM>

@{
    ViewBag.Title = "FinancialTransactionList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public string CheckString(string remarks)
    {
        return remarks.Replace(System.Environment.NewLine, "<br/>");
    }

    public string ConvertToInt64(decimal? data)
    {
        if (data != null)
            return Convert.ToInt64(data.Value).ToString();
        else
            return null;
    }

    public string ConvertToInt64dollar(decimal? data)
    {
        if (data != null && data != 0)
            return new HtmlString("$ " + Convert.ToInt64(data)).ToString();
        else
            return null;
    }
    public string ConvertToInt64Percent(decimal? data)
    {
        if (data != null && data != 0)
            return new HtmlString(Convert.ToInt64(data) + " %").ToString();
        else
            return null;
    }
}

@{
    var listMonths = new List<SelectListItem>()
                                  {
                                   new SelectListItem {Text = "All",   Value = "0"},
                                   new SelectListItem {Text = "January",   Value = "1"},
                                   new SelectListItem {Text = "February", Value = "2"},
                                   new SelectListItem {Text = "March", Value = "3"},
                                   new SelectListItem {Text = "April",   Value = "4"},
                                   new SelectListItem {Text = "May", Value = "5"},
                                   new SelectListItem {Text = "June", Value = "6"},
                                   new SelectListItem {Text = "July",   Value = "7"},
                                   new SelectListItem {Text = "August", Value = "8"},
                                   new SelectListItem {Text = "September", Value = "9"},
                                   new SelectListItem {Text = "October",   Value = "10"},
                                   new SelectListItem {Text = "November", Value = "11"},
                                   new SelectListItem {Text = "December", Value = "12"}
                               };
}
<style>
    .centerbox {
        margin: auto;
        width: 100%;
        border: 1px solid gray;
        border-radius: 20px;
    }

    .center {
        text-align: center !important;
    }

    .right {
        text-align: right !important;
    }

    .bordertop {
        border-top: 2px solid gray !important;
        border-bottom: 2px solid gray !important;
        color: #D73925;
        /*font-family: 'Bebas Neue';*/
    }
    table {
        font-weight: bold;
    }

    thead > tr > td {
        font-weight: bold;
        color: blue;
    }
</style>

@using (Html.BeginForm("SaveFinancialTransaction", "FinancialTransaction", FormMethod.Post, new { id = "frmFinancial", name = "frmFinancial", enctype = "multipart/form-data" }))
{
    <div class="page page-forms-elements">
        <div class="page-wrap">
            <div class="panel panel-default">
                <div class="box" id="grid">
                    <div class="box-header">
                        <div style="display:-webkit-inline-box">
                            <h4> Financial Transaction List</h4>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="form-group">
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Year</span>
                                </label>
                                <div class="col-md-2">
                                    @Html.DropDownListFor(x => x.FirstOrDefault().Year, Enumerable.Range(2014, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:60%" })
                                </div>
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Month</span>
                                </label>
                                <div class="col-md-2">
                                    @Html.DropDownListFor(x => x.FirstOrDefault().Month, listMonths, new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:70%" })
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-md-12">
                                <table class="display tablescroll nowrap" id="tblFinancialTransaction" style="width:100%">
                                    <thead style="cursor:pointer">
                                        <tr>
                                            <td style='min-width:60px;'>#Action</td>
                                            <td style='min-width:94px;'>Event ID</td>
                                            <td style='min-width:100px;'>Country Name</td>
                                            <td style='min-width:100px;'>Rev Amount</td>
                                            <td style='min-width:100px;'>Trainer Fee Amt.</td>
                                            <td style='min-width:120px;'>Trainer Airfare Amt.</td>
                                            <td style='min-width:120px;'>Hotel Bookings Amt.</td>
                                            <td style='min-width:120px;'>Trainer Claims Amt.</td>
                                            <td style='min-width:120px;'>Regional exp Amt.</td>
                                            <td style='min-width:160px;'>Courseware Material Amt.</td>
                                            <td style='min-width:80px;'>Gross Profit</td>
                                            <td style='min-width:80px;'>P&L Percent</td>
                                            <td style='min-width:100px;'>Rev Ref Doc</td>
                                            <td style='min-width:150px;'>Rev Remarks</td>
                                            <td style='min-width:120px;'>Trainer Exp Ref Doc</td>
                                            <td style='min-width:130px;'>Trainer Exp Remarks</td>
                                            <td style='min-width:140px;'>Trainer Airfare Ref Doc</td>
                                            <td style='min-width:140px;'>Trainer Airfare Remarks</td>
                                            <td style='min-width:150px;'>Hotel Bookings Ref Doc</td>
                                            <td style='min-width:150px;'>Hotel Bookings Remarks</td>
                                            <td style='min-width:150px;'>Trainer Claims Ref Doc</td>
                                            <td style='min-width:140px;'>Trainer Claims Remarks</td>
                                            <td style='min-width:140px;'>Regional exp Ref Doc</td>
                                            <td style='min-width:145px;'>Regional exp Remarks</td>
                                            <td style='min-width:180px;'>Courseware Material Ref Doc</td>
                                            <td style='min-width:100px;'>Courseware Material Remarks</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{ int recCount = -1;}
                                        @foreach (var item in Model)
                                        {
                                            {
                                                recCount = recCount + 1;
                                            }
                                            <tr>
                                                <td style="min-width:60px;">
                                                    @if (Session["RoleCode"].ToString() == "ADMIN")
                                                    {
                                                        <input type="hidden" id="hdnFinancialTransactionId" value="@item.FinancialTransactionId" />
                                                        <button id="btn_edit" class="btn btn-primary btn-xs waves-effect btn_edit " data-toggle="modal" onclick="UpdateFinancialTransaction(@item.FinancialTransactionId,'@item.TrainingConfirmationID',@item.Country,@(item.TotalRevenueAmount==null ? 0:item.TotalRevenueAmount),@item.Month,@item.Year)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                                    }
                                                </td>
                                                <td style="min-width:94px;">
                                                    @item.TrainingConfirmationID
                                                </td>
                                                <td style="min-width:100px;">
                                                    @item.CountryName
                                                </td>
                                                <td class="center" style="min-width:100px;">
                                                    @ConvertToInt64dollar(item.TotalRevenueAmount)
                                                </td>
                                                <td class="center" style="min-width:100px;">
                                                    @ConvertToInt64dollar(item.TrainerExpensesAmount)
                                                </td>
                                                <td class="center" style="min-width:120px;">
                                                    @ConvertToInt64dollar(item.TrainerTravelExpensesAmount)
                                                </td>
                                                <td class="center" style="min-width:120px;">
                                                    @ConvertToInt64dollar(item.LocalExpensesAmount)
                                                </td>
                                                <td class="center" style="min-width:120px;">
                                                    @ConvertToInt64dollar(item.TrainerClaimsAmount)
                                                </td>
                                                <td class="center" style="min-width:120px;">
                                                    @ConvertToInt64dollar(item.MiscExpensesAmount)
                                                </td>
                                                <td class="center" style="min-width:160px;">
                                                    @ConvertToInt64dollar(item.CoursewareMaterialAmount)
                                                </td>
                                                <td class="center" style="min-width:80px;">
                                                    @ConvertToInt64dollar(item.GrossProfit)
                                                </td>
                                                <td class="center" style="min-width:80px;">
                                                    @ConvertToInt64Percent(item.ProfitAndLossPercent)
                                                </td>
                                                <td style="min-width:100px;">
                                                    <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/ft_@item.FinancialTransactionId/TotalRevenue/@item.TotalRevenueReferenceDoc" target="_blank">@item.TotalRevenueReferenceDoc</a>
                                                </td>
                                                <td style="min-width:150px;">
                                                    @if (item.TotalRevenueRemarks != null && item.TotalRevenueRemarks.ToString().Length > 20)
                                                    {
                                                        <a style="cursor:pointer;text-decoration:underline;">
                                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.TotalRevenueRemarks)" data-original-title="" title="">@item.TotalRevenueRemarks.ToString().Substring(0, 20)...</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span>@item.TotalRevenueRemarks</span>
                                                    }
                                                </td>
                                                <td style="min-width:120px;">
                                                    <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/ft_@item.FinancialTransactionId/TrainerExpenses/@item.TrainerExpensesReferenceDoc" target="_blank">@item.TrainerExpensesReferenceDoc</a>
                                                </td>
                                                <td style="min-width:130px;">
                                                    @if (item.TrainerExpensesRemarks != null && item.TrainerExpensesRemarks.ToString().Length > 20)
                                                    {
                                                        <a style="cursor:pointer;text-decoration:underline;">
                                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.TrainerExpensesRemarks)" data-original-title="" title="">@item.TrainerExpensesRemarks.ToString().Substring(0, 20)...</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span>@item.TrainerExpensesRemarks</span>
                                                    }
                                                </td>
                                                <td style="min-width:140px;">
                                                    <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/ft_@item.FinancialTransactionId/TrainerTravelExpenses/@item.TrainerTravelExpensesReferenceDoc" target="_blank">@item.TrainerTravelExpensesReferenceDoc</a>
                                                </td>
                                                <td style="min-width:140px;">
                                                    @if (item.TrainerTravelExpensesRemarks != null && item.TrainerTravelExpensesRemarks.ToString().Length > 20)
                                                    {
                                                        <a style="cursor:pointer;text-decoration:underline;">
                                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.TrainerTravelExpensesRemarks)" data-original-title="" title="">@item.TrainerTravelExpensesRemarks.ToString().Substring(0, 20)...</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span>@item.TrainerTravelExpensesRemarks</span>
                                                    }
                                                </td>
                                                <td style="min-width:150px;">
                                                    <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/ft_@item.FinancialTransactionId/LocalExpenses/@item.LocalExpensesReferenceDoc" target="_blank">@item.LocalExpensesReferenceDoc</a>
                                                </td>
                                                <td style="min-width:150px;">
                                                    @if (item.LocalExpensesRemarks != null && item.LocalExpensesRemarks.ToString().Length > 20)
                                                    {
                                                        <a style="cursor:pointer;text-decoration:underline;">
                                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.LocalExpensesRemarks)" data-original-title="" title="">@item.LocalExpensesRemarks.ToString().Substring(0, 20)...</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span>@item.LocalExpensesRemarks</span>
                                                    }
                                                </td>
                                                <td style="min-width:150px;">
                                                    <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/ft_@item.FinancialTransactionId/TrainerClaims/@item.MiscExpensesReferenceDoc" target="_blank">@item.MiscExpensesReferenceDoc</a>
                                                </td>
                                                <td style="min-width:140px;">
                                                    @if (item.TrainerClaimsRemarks != null && item.TrainerClaimsRemarks.ToString().Length > 20)
                                                    {
                                                        <a style="cursor:pointer;text-decoration:underline;">
                                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.TrainerClaimsRemarks)" data-original-title="" title="">@item.TrainerClaimsRemarks.ToString().Substring(0, 20)...</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span>@item.TrainerClaimsRemarks</span>
                                                    }
                                                </td>
                                                <td style="min-width:140px;">
                                                    <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/ft_@item.FinancialTransactionId/MiscExpenses/@item.MiscExpensesReferenceDoc" target="_blank">@item.MiscExpensesReferenceDoc</a>
                                                </td>
                                                <td style="min-width:145px;">
                                                    @if (item.MiscExpensesRemarks != null && item.MiscExpensesRemarks.ToString().Length > 20)
                                                    {
                                                        <a style="cursor:pointer;text-decoration:underline;">
                                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.MiscExpensesRemarks)" data-original-title="" title="">@item.MiscExpensesRemarks.ToString().Substring(0, 20)...</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span>@item.MiscExpensesRemarks</span>
                                                    }
                                                </td>
                                                <td style="min-width:180px;">
                                                    <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/ft_@item.FinancialTransactionId/CoursewareMaterial/@item.CoursewareMaterialReferenceDoc" target="_blank">@item.CoursewareMaterialReferenceDoc</a>
                                                </td>
                                                <td style="min-width:180px;">
                                                    @if (item.CoursewareMaterialRemarks != null && item.CoursewareMaterialRemarks.ToString().Length > 20)
                                                    {
                                                        <a style="cursor:pointer;text-decoration:underline;">
                                                            <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.CoursewareMaterialRemarks)" data-original-title="" title="">@item.CoursewareMaterialRemarks.ToString().Substring(0, 20)...</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span>@item.CoursewareMaterialRemarks</span>
                                                    }
                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                    <tfoot>
                                        <tr class="bordertop">
                                            <td style="min-width:60px;">Summary</td>
                                            <td style="min-width:94px;"></td>
                                            <td style="min-width:100px;"></td>
                                            <td class="center" style="min-width:100px;"></td>
                                            <td class="center" style="min-width:100px;"></td>
                                            <td class="center" style="min-width:120px;"></td>
                                            <td class="center" style="min-width:120px;"></td>
                                            <td class="center" style="min-width:120px;"></td>
                                            <td class="center" style="min-width:120px;"></td>
                                            <td class="center" style="min-width:160px;"></td>
                                            <td class="center" style="min-width:80px;"></td>
                                            <td class="center" style="min-width:80px;"></td>
                                            <td style="min-width:100px;"></td>
                                            <td style="min-width:150px;"></td>
                                            <td style="min-width:120px;"></td>
                                            <td style="min-width:130px;"></td>
                                            <td style="min-width:140px;"></td>
                                            <td style="min-width:140px;"></td>
                                            <td style="min-width:150px;"></td>
                                            <td style="min-width:150px;"></td>
                                            <td style="min-width:150px;"></td>
                                            <td style="min-width:140px;"></td>
                                            <td style="min-width:140px;"></td>
                                            <td style="min-width:145px;"></td>
                                            <td style="min-width:180px;"></td>
                                            <td style="min-width:175px;"></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section SectionScripts {
    <script type="text/javascript">
        $(function () {
            $('#tblFinancialTransaction').DataTable({
                "bPaginate": false,
                scrollY: '48vh',
                scrollCollapse: true,
                scrollX: true,
                paging: false,

                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {

                        var amt = typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                        return amt;

                    };

                    // Total over this page

                    if (api.column(3).data().length) {
                        var pageTotal3 = api
                            .column(3, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal3 = 0 };

                    // Update footer
                    $(api.column(3).footer()).html(
                        '$ ' + pageTotal3
                    );

                    // Total over this page

                    if (api.column(4).data().length) {
                        var pageTotal4 = api
                            .column(4, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal4 = 0 };

                    // Update footer
                    $(api.column(4).footer()).html(
                        '$ ' + pageTotal4
                    );


                    // Total over this page
                    debugger
                    if (api.column(5).data().length) {
                        var pageTotal5 = api
                            .column(5, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal5 = 0 };

                    // Update footer
                    $(api.column(5).footer()).html(
                        '$ ' + pageTotal5
                    );

                    // Total over this page

                    if (api.column(6).data().length) {
                        var pageTotal6 = api
                            .column(6, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal6 = 0 };

                    // Update footer
                    $(api.column(6).footer()).html(
                        '$ ' + pageTotal6
                    );

                    // Total over this page

                    if (api.column(7).data().length) {
                        var pageTotal7 = api
                            .column(7, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal7 = 0 };

                    // Update footer
                    $(api.column(7).footer()).html(
                        '$ ' + pageTotal7
                    );

                    // Total over this page

                    if (api.column(8).data().length) {
                        var pageTotal8 = api
                            .column(8, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal8 = 0 };

                    // Update footer
                    $(api.column(8).footer()).html(
                        '$ ' + pageTotal8
                    );

                    // Total over this page

                    if (api.column(9).data().length) {
                        var pageTotal9 = api
                            .column(9, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal9 = 0 };

                    // Update footer
                    $(api.column(9).footer()).html(
                        '$ ' + pageTotal9
                    );

                    // Total over this page

                    if (api.column(10).data().length) {
                        var pageTotal10 = api
                            .column(10, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                    }
                    else { pageTotal10 = 0 };

                    // Update footer
                    $(api.column(10).footer()).html(
                        '$ ' + pageTotal10
                    );
                }
            });

            $('#liFinancialTransactionList').addClass('active');

            $("#tblFinancialTransaction tbody tr").each(function (i, row) {
                debugger;
                var $actualRow = $(row);
                if ($actualRow.find('#hdnFinancialTransactionId').val() != -1) {
                    $actualRow.css('background-color', '#b3f7da');
                }

            });

        });

        function ChangeMonth() {
            window.location = '@Url.Action("FinancialTransactionList", "FinancialTransaction", new { month = "", year = "" })' + '?month=' + $('#Month').val() + "&year=" + $('#Year').val();
        };

        function UpdateFinancialTransaction(FinancialTransactionId, TrainingConfirmationID, Country, TotalRevenueAmount, Month, Year) {
            if (TotalRevenueAmount > 0) {
                location.href = '@Url.Content("~/FinancialTransaction/FinancialTransactionDetail?Id=")' + FinancialTransactionId + "&trainingConfirmationID=" + TrainingConfirmationID + "&country=" + Country + "&totalRevenueAmount=" + TotalRevenueAmount + "&month=" + Month + "&year=" + Year;
            }
            else {
                swal("Cannot proceed without Revenue Amount. Please fulfill the Registration Details for this event '" + TrainingConfirmationID+"'.", "");
            }
        }

        function SaveFinancialTransaction() {
                if ($('#frmFinancial').valid()) {

                    debugger;
                $('#Amount').removeAttr('disabled');
                $('#LocalAmount').removeAttr('disabled');
                $('#frmFinancial').submit();
                }
            };

        $('#frmFinancial').validate({
                rules: {
                    'financialTransaction.Country': {
                        required: true
                    },
                'financialTransaction.CurrencyCode': {
                        required: true
                },
                'financialTransaction.CurrencyExRate': {
                        required: true,
                }
                ,
                'Amount': {
                        required: true,
                },
                'financialTransaction.TrainingConfirmationID': {
                        required: true
                }
                }
            });
            function mouseleave(el) {
            $(el).popover("hide");
            }

            function mouseover(el) {
            $(el).popover("show");
            }
    </script>
}
