@using Newtonsoft.Json;
@model EDU.Web.ViewModels.FinancialTransactionModel.FinancialTransactionVM

@{
    ViewBag.Title = "FinancialTransactionList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var grid = new WebGrid(Model.financialTransactionDetailList);
}
@functions {
    public string CheckString(string remarks)
    {
        return remarks.Replace(System.Environment.NewLine, "<br/>");
    }
    public string ConvertToInt64(decimal? data)
    {
        if (data != null)
            return Convert.ToInt64(data.Value).ToString();
        else
            return null;
    }
}
<style>
    .centerbox {
        margin: auto;
        width: 100%;
        border: 1px solid gray;
        border-radius: 20px;
    }

    .center {
        text-align: center !important;
    }

    .right {
        text-align: right !important;
    }

    .bordertop {
        border-top: 2px solid gray !important;
        border-bottom: 2px solid gray !important;
        color: #D73925;
        /*font-family: 'Bebas Neue';*/
    }
</style>

@using (Html.BeginForm("SaveFinancialTransaction", "FinancialTransaction", FormMethod.Post, new { id = "frmFinancial", name = "frmFinancial", enctype = "multipart/form-data" }))
{
    <div class="page page-forms-elements">
        <div class="page-wrap">
            <div class="panel panel-default">
                <div class="box" id="grid">
                    <div class="box-header">
                        <div style="display:-webkit-inline-box">
                            <h4> Financial Transaction List</h4>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="form-group">
                                <label class="col-md-1 control-label">
                                    <span>Event No.</span>
                                </label>
                                <div class="col-md-2">
                                    @Html.HiddenFor(x => x.financialTransaction.FinancialTransactionId)
                                    <input type="hidden" id="eventid" name="eventid" />
                                    @Html.HiddenFor(x => x.financialTransaction.IsSubmit)
                                    @Html.DropDownListFor(x => x.financialTransaction.TrainingConfirmationID,
          new SelectList(Model.trainingConfirmationList, "TrainingConfirmationID", "TrainingConfirmationID"),
          "Select Event No.", new { @class = "form-control input-sm ", onchange = "ChangeEventID(this);" })
                                </div>
                                @*<label class="col-md-1 control-label">
                                        <span>Country</span>
                                    </label>*@
                                <div class="col-md-2">
                                    @Html.DropDownListFor(x => x.financialTransaction.Country,
      new SelectList(Model.countryList, "BranchID", "BranchName"),
      "Select Country", new { @class = "form-control input-sm ", onchange = "CountryChange(this);" })
                                </div>
                                @*<label class="col-md-1 control-label">
                                        <span>Currency</span>
                                    </label>*@
                                <div class="col-md-1">
                                    @Html.DropDownListFor(x => x.financialTransaction.CurrencyCode,
      new SelectList(Model.currencyList, "LookupCode", "LookupCode"),
      "Select Currency", new { @class = "form-control input-sm " })
                                </div>
                                <div class="col-md-1">
                                    @Html.TextBoxFor(x => x.financialTransaction.CurrencyExRate, "{0:#.#}",
           new { placeholder = "CONVERSION RATE", @class = "form-control input-sm numCss", onblur = "ValidateTheExValue()" })
                                </div>
                            </div>
                        </div>
                        <div class="row css10">
                            <div class="col-md-12">
                                <div id="gridContent">
                                    @grid.GetHtml(
                                     tableStyle: "table table-striped",
                                     mode: WebGridPagerModes.All,
                                     columns:
                                        grid.Columns(
                                        grid.Column("DESCRIPTION", "DESCRIPTION", canSort: false),
                                        grid.Column("Amount", "Amount", format:
                                        @<text>
                                            <div style='width:50px;'>
                                                @if (item.Amount != null)
                                                {
                                                    <span class="center">
                                                        $&nbsp;@ConvertToInt64(item.Amount)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="center">
                                                        @ConvertToInt64(item.Amount)
                                                    </span>
                                                }
                                            </div>
                                        </text>, canSort: false),
                                        grid.Column("LocalAmount", "Local Amount", format:
                                        @<text>
                                            <div style='width:50px;'>
                                                @if (item.LocalAmount != null)
                                                {
                                                    <span class="center">
                                                        $&nbsp;@ConvertToInt64(item.LocalAmount)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="center">
                                                        @ConvertToInt64(item.LocalAmount)
                                                    </span>
                                                }
                                                
                                            </div>
                                        </text>, canSort: false),
                                        grid.Column("ReferenceDoc", "Reference Doc",
                                        format:
                                        @<text>
                                            <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/@item.TrainingConfirmationID/@item.DescriptionId/@item.ReferenceDoc" target="_blank">@item.ReferenceDoc</a>
                                        </text>,canSort: false),
                                        grid.Column("Remarks", "Remarks",
                                         format:
                                        @<text>
                                            <div style='width:140px;'>
                                                @if (item.Remarks != null && item.Remarks.ToString().Length > 20)
                                                {
                                                    <a style="cursor:pointer;text-decoration:underline;">
                                                        <span onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-placement="top" data-toggle="popover" data-html="true" data-title="Remarks" data-content="@CheckString(item.Remarks)" data-original-title="" title="">@item.Remarks.ToString().Substring(0, 20)...</span>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span>@item.Remarks</span>
                                                }
                                            </div>
                                        </text>, canSort: false),
                                        grid.Column("", format: @<text>
                                                @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                            {
                                                    <button id="btn_edit" class="btn btn-primary btn-xs waves-effect btn_edit" data-toggle="modal" onclick="EditFinancialTransactionDetail(@item.FinancialTransactionId,'@item.TrainingConfirmationID',@item.DescriptionId,'@item.Description',@item.FinancialTransactionDetailId)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>

                                                }
                                        </text>, style: "col3Width", canSort: false)
                                        ))
                                </div>
                            </div>
                        </div>
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {
                            <div class="modal-footer css10">
                                <button type="button" onclick="UpdateFinancialTransactionLocalAmount()" class="btn btn-primary btn-sm btndisable "><i class="fa fa-floppy-o"></i>&nbsp;Update</button>
                                <button type="button" onclick="SubmitFinancialTransaction()" class="btn btn-success btn-sm btndisable"><i class="fa fa-floppy-o"></i>&nbsp;Submit</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="myModal" class="modal fade" role="dialog">

    </div>
}
@section SectionScripts {
    <script type="text/javascript">

        $(function () {
            debugger;
            if ($('#financialTransaction_TrainingConfirmationID').val() != '' && $('#financialTransaction_TrainingConfirmationID').val() != null)
                $('.btn_edit').removeAttr('disabled');
            else
                $('.btn_edit').attr('disabled', 'disabled');

            if ($('#financialTransaction_IsSubmit').val() != "True")
                $('.btndisable').removeAttr('disabled');
            else
                $('.btndisable').attr('disabled', 'disabled');

            @if (Model.financialTransaction.FinancialTransactionId!=-1)
            {
            <text>
            var gp = @Model.financialTransaction.GrossProfit != null ?parseInt(@Model.financialTransaction.GrossProfit) : 0;
            var pl = @Model.financialTransaction.ProfitAndLossPercent != null ? parseInt(@Model.financialTransaction.ProfitAndLossPercent) : 0;
            $('#gridContent tbody').append('<tr class="bordertop"><td>GROSS PROFIT</td><td><span class="center">' +"$ "+ gp + '</span></td><td></td><td></td><td></td></tr>'+
                '<tr class="bordertop"><td>P&L</td><td><span class="center">' + pl + '%</span></td><td></td><td></td><td></td></tr>');
            </text>
            }
            //class="pull-right"
        });

        function UpdateFinancialTransactionLocalAmount() {
            if ($('#frmFinancial').valid()) {
                var FinancialTransaction =
                    {
                        "CurrencyExRate": $('#financialTransaction_CurrencyExRate').val(),
                        "Country": $('#financialTransaction_Country').val(),
                        "CurrencyCode": $('#financialTransaction_CurrencyCode').val(),
                        "FinancialTransactionId": $('#financialTransaction_FinancialTransactionId').val(),
                        "TrainingConfirmationID": $('#financialTransaction_TrainingConfirmationID').val()
                    };
                $.ajax({
                    url: '@Url.Content("~/FinancialTransaction/UpdateFinancialTransactionLocalAmount/")',
                    data: JSON.stringify(FinancialTransaction),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        alert(data);
                        location.reload(true);
                    }
                });
            }
        }

        function ChangeEventID(el) {

            $('#eventid').val(el.value);
            window.location = '@Url.Action("FinancialTransactionList", "FinancialTransaction", new { trainingConfirmationID = ""})' + '?trainingConfirmationID=' + el.value;

        };

        function SaveFinancialTransaction() {
            if ($('#frmFinancial').valid()) {

                debugger;
                $('#Amount').removeAttr('disabled');
                $('#LocalAmount').removeAttr('disabled');
                $('#frmFinancial').submit();
            }
        };


        function SubmitFinancialTransaction() {
            if ($('#frmFinancial').valid()) {
                var FinancialTransaction =
                    {
                        "FinancialTransactionId": $('#financialTransaction_FinancialTransactionId').val(),
                        "TrainingConfirmationID": $('#financialTransaction_TrainingConfirmationID').val()
                    };
                $.ajax({
                    url: '@Url.Content("~/FinancialTransaction/SubmitFinancialTransaction/")',
                    data: JSON.stringify(FinancialTransaction),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        alert(data);
                        location.reload(true);
                    }
                });
            }
        }

        function EditFinancialTransactionDetail(Id, trainingConfirmationID, descriptionId, description, financialTransactionDetailId) {
            debugger;
            if($('#frmFinancial').valid())
            {
                var currencyExRate = $('#financialTransaction_CurrencyExRate').val();
                $.ajax({
                    url: '@Url.Content("~/FinancialTransaction/FinancialTransactionDetail?financialTransactionId=")' + Id + "&trainingConfirmationID=" + trainingConfirmationID + "&descriptionId=" + descriptionId + "&description=" + description
                                        + "&currencyExRate=" + currencyExRate + "&financialTransactionDetailId=" + financialTransactionDetailId,
                    method: 'get',
                    contentType: 'text/html',
                    success: function (html) {
                        $('#myModal').html(html);
                        $('#myModal').modal('show');
                        if (descriptionId == 1050)
                            $('#Amount').attr('disabled', 'disabled');
                        else
                            $('#Amount').removeAttr('disabled');
                        CalculateLocalAmount();
                    },
                    error: function (err) {

                    }
                });
            }

        }

        function CountryChange(el) {
            if (el.value) {
                $.ajax({
                    url: '@Url.Content("~/FinancialTransaction/GetCurrency?Id=")' + el.value,
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (data) {
                        debugger;
                        $("#financialTransaction_CurrencyCode").val(data);
                    },
                    error: function (err) {
                    }
                });
            }
            else {
                $("#financialTransaction_CurrencyCode").val('');
            }
        };
        function CalculateLocalAmount() {
            debugger;
            var currencyrate = parseInt($('#financialTransaction_CurrencyExRate').val());
            var Amount = parseInt($('#Amount').val());
            var result = currencyrate * Amount;
            $('#LocalAmount').val(result);
            if (isNaN(Amount)) {
                $('#LocalAmount').val('');
            }
        }
        $('#frmFinancial').validate({
            rules: {
                'financialTransaction.Country': {
                    required: true
                },
                'financialTransaction.CurrencyCode': {
                    required: true
                },
                'financialTransaction.CurrencyExRate': {
                    required: true,
                }
                ,
                'Amount': {
                    required: true,
                }
            }
        });
        function mouseleave(el) {
            $(el).popover("hide");
        }

        function mouseover(el) {
            $(el).popover("show");
        }
        function ValidateTheExValue()
        {
            var currencyrate = parseInt($('#financialTransaction_CurrencyExRate').val());
            if(currencyrate==0)
            {
                parseInt($('#financialTransaction_CurrencyExRate').val(''));
            }
        }
    </script>
}
