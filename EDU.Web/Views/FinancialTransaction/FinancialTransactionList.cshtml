@using Newtonsoft.Json;
@model EDU.Web.ViewModels.FinancialTransactionModel.FinancialTransactionVM

@{
    ViewBag.Title = "FinancialTransactionList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("SaveFinancialTransaction", "FinancialTransaction", FormMethod.Post, new { id = "frmFinancial", name = "frmFinancial" }))
{
    <div class="page page-forms-elements">
        <div class="page-wrap">
            <div class="panel panel-default">
                <div class="box" id="grid">
                    <div class="box-header">
                        <div style="display:-webkit-inline-box">
                            <h4> Financial Transaction List</h4>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="form-group">
                                <label class="col-md-1 control-label">
                                    <span>Event No.</span>
                                </label>
                                <div class="col-md-2">
                                    <input type="hidden" id="eventid" name="eventid" />
                                    @Html.DropDownListFor(x => x.financialTransaction.TrainingConfirmationID,
          new SelectList(Model.trainingConfirmationList, "TrainingConfirmationID", "TrainingConfirmationID"),
          "Select Event No.", new { @class = "form-control input-sm ", onchange = "ChangeEventID(this);" })
                                </div>
                                @*<label class="col-md-1 control-label">
                                        <span>Country</span>
                                    </label>*@
                                <div class="col-md-2">
                                    @Html.DropDownListFor(x => x.financialTransaction.Country,
      new SelectList(Model.countryList, "BranchID", "BranchName"),
      "Select Country", new { @class = "form-control input-sm ", onchange = "CountryChange(this);" })
                                </div>
                                @*<label class="col-md-1 control-label">
                                        <span>Currency</span>
                                    </label>*@
                                <div class="col-md-1">
                                    @Html.DropDownListFor(x => x.financialTransaction.CurrencyCode,
      new SelectList(Model.currencyList, "LookupCode", "LookupCode"),
      "Select Currency", new { @class = "form-control input-sm " })
                                </div>
                                <div class="col-md-1">
                                    @Html.TextBoxFor(x => x.financialTransaction.CurrencyExRate, "{0:#.#}",
           new { placeholder = "CONVERSION RATE", @class = "form-control input-sm numCss" })
                                </div>
                            </div>
                        </div>
                        <div class="row css10">
                            <div class="col-md-12">
                                @{
                                    var grid = new WebGrid(Model.financialTransactionDetailList);
                                }
                                <div id="gridContent">
                                    @grid.GetHtml(
                                     tableStyle: "table table-striped",
                                     mode: WebGridPagerModes.All,
                                     columns:
                                        grid.Columns(
                                        grid.Column("DESCRIPTION", "DESCRIPTION"),
                                        grid.Column("Amount", "Amount"),
                                        grid.Column("ReferenceDoc", "Reference Doc"),
                                        grid.Column("Remarks", "Remarks"),
                                        grid.Column("", format: @<text>
                                            @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                            {
                                                <button id="btn_edit" class="btn btn-primary btn-xs waves-effect btn_edit" data-toggle="modal" onclick="EditFinancialTransactionDetail(@item.FinancialTransactionId,'@item.TrainingConfirmationID',@item.DescriptionId,'@item.Description')"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>

                                            }
                                        </text>, style: "col3Width", canSort: false)
                                        ))
                                </div>
                            </div>
                        </div>

                        @*<div class="row css10">
                                <div class="col-md-12">
                                    @{
                                        var grid = new WebGrid(Model.financialTransactionDetailList);
                                    }
                                    <div id="gridContent">
                                        @grid.GetHtml(
                                                          tableStyle: "table table-striped",
                                                          mode: WebGridPagerModes.All,
                                                          columns:
                                                             grid.Columns(
                                                             grid.Column("DESCRIPTION", "DESCRIPTION"),
                                                             grid.Column("Amount", "Amount", format: @<text> <span class="display-mode"> @(item.Amount != null ? Convert.ToInt64(item.Amount) : null) </span>  <input type="text" name="Amount" id="Amount" value="@(item.Amount != null ? Convert.ToInt64(item.Amount) : null)" class="edit-mode numCss" /> </text>, style: ""),
                                                             grid.Column("ReferenceDoc", "Reference Doc", format: @<text> <span class="display-mode"> @(item.ReferenceDoc != null ? item.ReferenceDoc : null) </span>  <input type="file" name="ReferenceDoc" id="ReferenceDoc" value="@(item.ReferenceDoc != null ? item.ReferenceDoc : null)" class="edit-mode" /> </text>, style: ""),
                                                             grid.Column("Remarks", "Remarks", format: @<text> <span class="display-mode"> @(item.Remarks != null ? item.NoOfStudents : null) </span>  <textarea type="text" name="Remarks" id="Remarks" value="@(item.Remarks != null ? item.Remarks : null)" class="edit-mode"></textarea> </text>, style: ""),
                                                             grid.Column("", format: @<text>
                                                                    @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                                                    {
                                                                        <button type="button" class="edit-user display-mode btn btn-primary btn-xs waves-effect"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                                                    }
                                                                    <button type="button" class="save-user edit-mode btn btn-success btn-xs waves-effect"><i class="fa fa-floppy-o" style="padding-left: 5px;"></i></button>
                                                                    <button type="button" class="cancel-user edit-mode btn btn-default btn-xs waves-effect"><i class="fa fa-times" style="padding-left: 5px;"></i></button>
                                                            </text>, style: "col3Width", canSort: false)
                                                             ))
                                    </div>
                                </div>
                            </div>*@
                        <div class="modal-footer css10">
                            <button type="button" onclick="SubmitFinancialTransaction()" class="btn btn-success btn-sm"><i class="fa fa-floppy-o"></i>&nbsp;Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}
@section SectionScripts {
    <script type="text/javascript">

        $(function () {
            debugger;
            if ($('#financialTransaction_TrainingConfirmationID').val() != '' && $('#financialTransaction_TrainingConfirmationID').val() != null)
                $('.btn_edit').removeAttr('disabled');
            else
                $('.btn_edit').attr('disabled', 'disabled');
        });

        function ChangeEventID(el) {

            $('#eventid').val(el.value);
            window.location = '@Url.Action("FinancialTransactionList", "FinancialTransaction", new { trainingConfirmationID = ""})' + '?trainingConfirmationID=' + el.value;

        };

        function SaveFinancialTransaction() {
            if ($('#frmFinancial').valid()) {

                debugger;

                $('#frmFinancial').submit();
            }
        };


        function SubmitFinancialTransaction() {

        }

        function EditFinancialTransactionDetail(Id, trainingConfirmationID, descriptionId, description) {
            var currencyExRate = 100;
            $.ajax({
                url: '@Url.Content("~/FinancialTransaction/FinancialTransactionDetail?financialTransactionId=")' + Id + "&trainingConfirmationID=" + trainingConfirmationID + "&descriptionId=" + descriptionId + "&description=" + description + "&currencyExRate=" + currencyExRate,
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            });
        }

        function CountryChange(el) {
        if (el.value) {
                $.ajax({
                    url: '@Url.Content("~/FinancialTransaction/GetCurrency?Id=")' + el.value,
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (data) {
                        debugger;
                        $("#financialTransaction_CurrencyCode").val(data);
                    },
                    error: function (err) {
                    }
                });
            }
        else
            {
            $("#financialTransaction_CurrencyCode").val('');
            }
    };
    </script>
}
