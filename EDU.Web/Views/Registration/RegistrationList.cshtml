
@model EDU.Web.ViewModels.Registration.RegistrationVM
@{
    ViewBag.Title = "Registrations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    WebGrid grid = new WebGrid(Model.registration, rowsPerPage: 10);
    grid.Pager(WebGridPagerModes.All);

    var Student = Model.trainingconfDetail.NoOfStudents;
    var reg = Model.registration.Count();
    var remainReg = Student - reg;
}
<style>
    .center {
        margin: auto;
        width: 100%;
        border: 1px solid gray;
        border-radius: 20px;
    }
</style>
<div class="page page-forms-elements">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <div style="display:-webkit-inline-box"><h4>Registrations List</h4>&nbsp;&nbsp;(&nbsp;<label style="color:red;margin-top:14px">Pending Registrations :@remainReg</label>&nbsp;)</div>
                    
                    <div class="box-tools">
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {

                            <button type="button" id="addbtn" class="btn btn-info btn-sm waves-effect" data-toggle="modal" onclick="navigatetoDetail()"><i class="fa fa-plus"></i>New Registration</button>
                            // <button class="btn btn-info btn-sm waves-effect" type="button" onclick="AddEduProduct();"><i class="fa fa-plus"></i> Add New Product</button>
                        }
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="col-md-1 control-label col-md-offset-2">
                                <span>Event No.</span>
                            </label>
                            <div class="col-md-2">
                                <input type="hidden" id="eventid" name="eventid" />
                                @Html.DropDownListFor(x => x.registration.FirstOrDefault().TrainingConfirmationID,
                                 new SelectList(Model.trainingconf, "TrainingConfirmationID", "TrainingConfirmationID"),
                                 "Select Event No.", new { @class = "form-control", onchange = "ChangeEventID(this);" })
                            </div>
                        </div>
                    </div>
                    <div id="TrainingDetails" class="col-md-8 col-md-offset-2 css10">
                        <div class="center">
                            <div class="row css10">
                                <div class="col-md-5 col-md-offset-1">
                                    <label class="control-label">Product:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null ? Model.trainingconfDetail.ProductName : "")</b>
                                </div>
                                <div class="col-md-5">
                                    <label class="control-label">Course:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null ? Model.trainingconfDetail.CourseName : "")</b>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5 col-md-offset-1">
                                    <label class="control-label">No of Students:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null ? Model.trainingconfDetail.NoOfStudents.ToString() : "")</b>
                                </div>
                                <div class="col-md-5">
                                    <label class="control-label">Type:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null ? (Model.trainingconfDetail.Private ? "Private" : "Public") : "")</b>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5 col-md-offset-1">
                                    <label class="control-label">Start Date:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null && Model.trainingconfDetail.StartDate != null ? Model.trainingconfDetail.StartDate.Value.ToString("dd/MM/yyyy") : "")</b>
                                </div>
                                <div class="col-md-5">
                                    <label class="control-label">End Date:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null && Model.trainingconfDetail.EndDate != null ? Model.trainingconfDetail.EndDate.Value.ToString("dd/MM/yyyy") : "")</b>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5 col-md-offset-1">
                                    <label class="control-label">Total # of days:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null ? Model.trainingconfDetail.TotalNoOfDays.ToString() : "")</b>
                                </div>
                                <div class="col-md-5">
                                    <label class="control-label">Trainer Name:&nbsp;&nbsp;&nbsp;&nbsp;    </label><b>@(Model.trainingconfDetail != null && Model.trainingconfDetail.TrianerName != null ? Model.trainingconfDetail.TrianerName : "")</b>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row" style="margin-top:20px;">
                    </div>
                    <div class="row css10" style="overflow-x: scroll; width: 100%">
                        @*<div class="row">*@
                            @grid.GetHtml(
                                    columns: grid.Columns(
                        grid.Column("StudentName", "Student Name", canSort: true),
                        grid.Column("Amount", "Amount", format:item=>Convert.ToInt64(item.Amount) , canSort: true),
                        grid.Column("WHTPercent", "WHT", format: (item) => new HtmlString(Convert.ToInt64(item.WHTPercent)+"%"), canSort: true),
                        grid.Column("WHTAmount", "WHT Amount", format: item => Convert.ToInt64(item.WHTAmount), canSort: true),
                        grid.Column("VATPercent", "VAT/TAX", format: (item) => new HtmlString(Convert.ToInt64(item.VATPercent) + "%"), canSort: true),
                        grid.Column("VATAmount", "VAT/TAX Amount", format: item => Convert.ToInt64(item.VATAmount), canSort: true),
                        grid.Column("TotalAmount", "TotalAmount", format: item => Convert.ToInt64(item.TotalAmount), canSort: true),
                        grid.Column("Payment1", "Payment 1", format: item => Convert.ToInt64(item.Payment1), canSort: true),
                        grid.Column("Payment1Date", "Payment1 Date", format:@<text> @item.Payment1Date.ToString("MM/dd/yyyy")</text> , canSort: true),
                        grid.Column("Payment1Type", "Payment1 Type",format:item=>Convert.ToString(item.Payment2), canSort: true),
                        grid.Column("Payment2", "Payment 2", format: item => Convert.ToInt64(item.Payment2), canSort: true),
                        grid.Column("Payment2Date", "Payment2 Date",format:@<text> @item.Payment2Date.ToString("MM/dd/yyyy")</text> , canSort: true),
                        grid.Column("Payment2Type", "Payment2 Type", canSort: true),
                        grid.Column("Payment3", "Payment 3", format: item => Convert.ToInt64(item.Payment3), canSort: true),
                        grid.Column("Payment3Date", "Payment3 Date", format:@<text> @item.Payment3Date.ToString("MM/dd/yyyy")</text> , canSort: true),
                        grid.Column("Payment3Type", "Payment3 Type", canSort: true),
                        grid.Column("BalanceAmount", "Balance", format: item => Convert.ToInt64(item.BalanceAmount), canSort: true),
                        grid.Column("CheckNo", "Check No", canSort: true),
                       grid.Column("OtherDeductionsAmount","Other Deductions Amount",format: item => Convert.ToInt64(item.OtherDeductionsAmount), canSort: true),
                        grid.Column("Email", "Email", canSort: true),
                        grid.Column("Contact", "Contact", canSort: true),
                        grid.Column("CompanyName", "Company Name", canSort: true),

                        grid.Column("", "#Action", canSort: false,
                                    format:
                                    @<text>
                                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                        {
                                            <button class="btn btn-xs btn-success waves-effect" style="padding-left: 5px;margin-left: 6px;" onclick="location.href ='@Url.Content("~/Registration/Registration?Id=" +item.RegistrationId+ "&trainingConfirmationID=" + item.TrainingConfirmationID)'"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                            <button class="btn btn-xs btn-danger waves-effect" style="padding-left: 5px;margin-left: 6px;" onclick="DeleteRegistration(@item.RegistrationId)"><i class="fa fa-trash-o" style="padding-left: 5px;"></i></button>
                                        }
                                    </text>)),
                                    tableStyle: "table")
                        @*</div>*@
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="pull-right">@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section SectionScripts{
    <script type="text/javascript">
        $(function () {

            $('#TrainingDetails').hide();
            $('#addbtn').attr('disabled', 'disabled');
            var trid = $('#TrainingConfirmationID').val();
            debugger;
            if (trid != null && trid != '') {
                $('#TrainingDetails').show();                

                @if(Model.registration.Count() >= Model.trainingconfDetail.NoOfStudents)
                {
                    <text>$('#addbtn').attr('disabled', 'disabled');</text>
                }
                else
                {
                    <text>$('#addbtn').removeAttr('disabled', 'disabled');</text>
                }
            }
        });

        function ChangeEventID(el) {
            if (el.value) {
                $('#eventid').val(el.value);
                //$('#TrainingDetails').show();
                //$('#addbtn').removeAttr('disabled', 'disabled');
                window.location = '@Url.Action("RegistrationList", "Registration", new { trainingConfirmationID = ""})' + '?trainingConfirmationID=' + el.value;
            }
            else {
                //$("#CurrencyCode").val('');
            }
        };

        function navigatetoDetail() {
            @*location.href = '@Url.Content("~/Registration/Registration?Id=-1&TrainingConfirmationID=" + $('#eventid').val())'*@
            var trid = $('#TrainingConfirmationID').val();
            debugger;
            //window.location = '@Url.Action("Registration", "Registration", new { Id ="", trainingConfirmationID = ""})' + 'Id=-1/trainingConfirmationID=' + trid;


            window.location = '@Url.Content("~/Registration/Registration")' + "?Id=-1&trainingConfirmationID=" + trid;
        };
        function DeleteRegistration(id) {

            if (confirm("Are you sure, You want to delete")) {
                $.ajax({
                    url: '@Url.Content("~/Registration/DeleteRegistration?Id=")' + id,
                    type: 'POST',
                    contentType: 'application/json',
                    success: function (data) {

                        alert("Deleted Successfully");
                        if (data) {
                            location.reload();
                        }
                    },
                    error: function (e) {

                    }
                });
            }
        }


    </script>

}
