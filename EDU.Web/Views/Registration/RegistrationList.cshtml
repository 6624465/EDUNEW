@using Newtonsoft.Json;

@model EDU.Web.ViewModels.Registration.RegistrationVM
@{
    ViewBag.Title = "Registrations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    WebGrid grid = new WebGrid(Model.registration, rowsPerPage: 15);
    grid.Pager(WebGridPagerModes.All);

    var Student = Model.trainingconfDetail.NoOfStudents;
    var reg = Model.registration.Count();
    var remainReg = Student - reg;

    var myArray = (List<decimal?>)ViewData["Summary"];
}
<style>
    .centerbox {
        margin: auto;
        width: 100%;
        border: 1px solid gray;
        border-radius: 20px;
    }

    .center {
        text-align: center !important;
    }

    .right {
        text-align: right !important;
    }

    .popover {
        color: black;
        min-width: 300px;
    }

    .popover-title {
        background-color: #F7F7F7;
        border-bottom: 1px solid #EBEBEB;
        border-radius: 5px 5px 0 0;
        font-size: 15px;
        font-weight: bold;
        line-height: 18px;
        margin: 0;
        padding: 8px 14px;
    }

    .bordertop {
        border-top: 2px solid gray !important;
        border-bottom: 2px solid gray !important;
        color: #D73925;
        /*font-family: 'Bebas Neue'*/
    }
</style>
@functions {
    public string GetPaymentType(short id)
    {
        if (id == 1)
            return "CASH";
        else if (id == 2)
            return "CHEQUE";
        else if (id == 3)
            return "BANK TRANSFER";
        else
            return "";
    }
    public string ConvertToInt64percent(decimal? data)
    {
        if (data != null && data > 0)
            return new HtmlString(Convert.ToInt64(data.Value) + "%").ToString();
        else
            return null;
    }
    public string ConvertToInt64dollar(decimal? data)
    {
        if (data != null && data != 0)
            return new HtmlString("$ " + Convert.ToInt64(data)).ToString();
        else
            return null;
    }

    public string PaymentDetails(DateTime? date, short? type, string no)
    {
        string x = "";
        if (type != null)
        {
            if (type == 1)
                x = "Payment Date : " + (date == null ? "" : date.Value.ToString("dd/MM/yyyy")) + "</Br>" +
                "Payment Type : Cash";
            else if (type == 2)
                x = "Payment Date : " + (date == null ? "" : date.Value.ToString("dd/MM/yyyy")) + "</Br>" +
                    "Payment Type : Cheque" + "</Br>" +
                    "Cheque No : " + (no == null ? "" : no);
            else if (type == 3)
                x = "Payment Date : " + (date == null ? "" : date.Value.ToString("dd/MM/yyyy")) + "</Br>" +
                    "Payment Type : Bank Transfer" + "</Br>" +
                    "Transaction ID : " + (no == null ? "" : no);
        }
        return x;
    }
}
@{
    var listMonths = new List<SelectListItem>()
                                          {
                                           new SelectListItem {Text = "All",   Value = "0"},
                                           new SelectListItem {Text = "Janaury",   Value = "1"},
                                           new SelectListItem {Text = "February", Value = "2"},
                                           new SelectListItem {Text = "March", Value = "3"},
                                           new SelectListItem {Text = "April",   Value = "4"},
                                           new SelectListItem {Text = "May", Value = "5"},
                                           new SelectListItem {Text = "June", Value = "6"},
                                           new SelectListItem {Text = "July",   Value = "7"},
                                           new SelectListItem {Text = "August", Value = "8"},
                                           new SelectListItem {Text = "September", Value = "9"},
                                           new SelectListItem {Text = "October",   Value = "10"},
                                           new SelectListItem {Text = "November", Value = "11"},
                                           new SelectListItem {Text = "December", Value = "12"}
                                       };
}
@functions {
    public string TypeColumn(bool isPrivate, bool isPublic, bool islvc)
    {
        if (isPrivate)
            return "Private";
        else if (isPublic)
            return "Public";
        else if (islvc)
            return "LVC/TOD";
        return "";
    }
}
<div class="page page-forms-elements">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <div style="display:-webkit-inline-box">
                        <h4> Registrations List</h4>
                        &nbsp;&nbsp;<span id="lblmsg">(&nbsp;<label style="color:red;margin-top:14px"> Pending Registrations :@remainReg</label>&nbsp;)</span>
                    </div>
                    <div class="box-tools">

                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Year</span>
                            </label>
                            <div class="col-md-1">
                                @Html.DropDownListFor(x => x.Year, Enumerable.Range(2014, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Month</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.Month, listMonths, new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span>Event No.</span>
                            </label>
                            <div class="col-md-2">
                                <input type="hidden" id="eventid" name="eventid" />
                                @Html.DropDownListFor(x => x.registration.FirstOrDefault().TrainingConfirmationID,
                                 new SelectList(Model.trainingconf, "TrainingConfirmationID", "TrainingConfirmationID"),
                                 "Select Event No.", new { @class = "form-control input-sm", onchange = "ChangeEventID(this);" })
                            </div>
                            <div class="col-md-2">
                                @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                {
                                    <button type="button" id="addbtn" class="btn btn-info btn-sm waves-effect" data-toggle="modal" onclick="navigatetoDetail()"><i class="fa fa-pencil"></i>Update Registration Info</button>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row css10">
                        <div id="TrainingDetails" class="col-md-12">
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-1">
                                        <label class="control-label">Product:&nbsp;&nbsp;&nbsp;&nbsp;    </label>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null ? Model.trainingconfDetail.ProductName : "")" />
                                    </div>
                                    <div class="col-md-1">
                                        <label class="control-label">Course:&nbsp;&nbsp;  </label>
                                    </div>
                                    <div class="col-md-4">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null ? Model.trainingconfDetail.CourseName : "")" />
                                    </div>
                                    <div class="col-md-1" style="width:110px">
                                        <label class="control-label">Trainer Name:&nbsp;&nbsp;   </label>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null && Model.trainingconfDetail.TrianerName != null ? Model.trainingconfDetail.TrianerName : "")" />
                                    </div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="form-group">
                                    <div class="col-md-1 ">
                                        <label class="control-label">Start Date:&nbsp;&nbsp;</label>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null && Model.trainingconfDetail.StartDate != null ? Model.trainingconfDetail.StartDate.Value.ToString("dd/MM/yyyy") : "")" />
                                    </div>
                                    <div class="col-md-1">
                                        <label class="control-label">End Date:&nbsp;&nbsp;    </label>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null && Model.trainingconfDetail.EndDate != null ? Model.trainingconfDetail.EndDate.Value.ToString("dd/MM/yyyy") : "")" />
                                    </div>
                                    <div class="col-md-1">
                                        <label class="control-label" style="white-space:nowrap">Total # of days:</label>
                                    </div>
                                    <div class="col-md-1">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null ? Model.trainingconfDetail.TotalNoOfDays.ToString() : "")" />
                                    </div>
                                    <div class="col-md-1">
                                        <label class="control-label">Type:</label>
                                    </div>
                                    <div class="col-md-1">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null ? TypeColumn(Model.trainingconfDetail.Private, Model.trainingconfDetail.Public, Model.trainingconfDetail.LVC) : "")" />
                                    </div>
                                    <div class="col-md-1">
                                        <label class="control-label " style="white-space:nowrap">No of Students:</label>
                                    </div>
                                    <div class="col-md-1">
                                        <input type="text" class="form-control input-sm" readonly value="@(Model.trainingconfDetail != null ? Model.trainingconfDetail.NoOfStudents.ToString() : "")" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @using (Html.BeginForm("SaveRegistrationList", "Registration", FormMethod.Post, new { id = "frmRegistration", name = "frmRegistration", autocomplete = "off" }))
                    {
                        <div class="row css25" id="webGridPublicEdit">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <td>S No.</td>
                                        <td>Student Name</td>
                                        <td>Email Id</td>
                                        <td>Contact</td>
                                        <td>Company/Individual</td>
                                        <td>Amount</td>
                                        <td>VAT/TAX</td>
                                        <td>VAT/TAX Amount</td>
                                        <td>WHT</td>
                                        <td>WHT Amount</td>
                                        <td>Payment #1</td>
                                        <td>Payment #2</td>
                                        <td>Payment #3</td>
                                        <td>Total Amount</td>
                                        <td>Balance Amount</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.registration.Count(); i++)
                                    {
                                        @Html.HiddenFor(x => x.registration[i].RegistrationId)
                                        @Html.HiddenFor(x => x.registration[i].TrainingConfirmationID)
                                        <tr>
                                            <td>@i.</td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].StudentName, new { @class = "form-control input-sm" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Email, new { @class = "form-control input-sm" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Contact, new { @class = "form-control input-sm" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].CompanyName, new { @class = "form-control input-sm" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Amount, new { @class = "form-control input-sm", onkeyup = "calculateTotalAmount(this)" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].VATPercent, new { @class = "form-control input-sm", onkeyup = "calculateTotalAmount(this)" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].VATAmount, new { @class = "form-control input-sm", @readonly = true })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].WHTPercent, new { @class = "form-control input-sm", onkeyup = "calculateTotalAmount(this)" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].WHTAmount, new { @class = "form-control input-sm", @readonly = true })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Payment1, new { @class = "form-control input-sm", onkeyup = "calculateTotalAmount(this)" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Payment2, new { @class = "form-control input-sm", onkeyup = "calculateTotalAmount(this)" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Payment3, new { @class = "form-control input-sm", onkeyup = "calculateTotalAmount(this)" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].TotalAmount, new { @class = "form-control input-sm", @readonly = true })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].BalanceAmount, new { @class = "form-control input-sm", @readonly = true })
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td colspan="15">
                                            <div class="row css25">
                                                <div class="col-md-12">
                                                    <div class="text-center">
                                                        <button id="btnSave" type="button" onclick="SaveRegistration()" class="btn btn-success btn-frmt green btn-sm"><i class="fa fa-floppy-o"></i>&nbsp;Save</button> &nbsp;&nbsp;&nbsp;
                                                        <button class="btn btn-default btn-sm" type="button" onclick="navigatetoList()"><i class="fa fa-backward"></i>&nbsp;Back</button>&nbsp;&nbsp;&nbsp;
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="row css10" id="PrivateElementsOnly">
                            <table class="table">
                                <thead>
                                    <tr class="center">
                                        <td>Amount</td>
                                        <td>VAT/TAX</td>
                                        <td>WHT</td>
                                        <td>Payment #1</td>
                                        <td>Payment #2</td>
                                        <td>Payment #3</td>
                                        <td>Total Amount</td>
                                        <td>Balance Amount</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @Html.HiddenFor(x => x.registration.FirstOrDefault().TrainingConfirmationID)
                                    @Html.HiddenFor(x => x.registration.FirstOrDefault().RegistrationId)
                                    <tr>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().Amount, new { @class = "form-control input-sm" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().WHTPercent, new { @class = "form-control input-sm" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().VATPercent, new { @class = "form-control input-sm" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().Payment1, new { @class = "form-control input-sm" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().Payment2, new { @class = "form-control input-sm" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().Payment3, new { @class = "form-control input-sm" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().TotalAmount, new { @class = "form-control input-sm" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.registration.FirstOrDefault().BalanceAmount, new { @class = "form-control input-sm" })
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="row css25" id="webGridPrivateEdit">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <td>S No.</td>
                                        <td>Student Name</td>
                                        <td>Email Id</td>
                                        <td>Contact</td>
                                        <td>Company/Individual</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.registration.Count(); i++)
                                    {
                                        @Html.HiddenFor(x => x.registration[i].RegistrationId)
                                        @Html.HiddenFor(x => x.registration[i].TrainingConfirmationID)
                                        <tr>
                                            <td>@i.</td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].StudentName, new { @class = "form-control input-sm" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Email, new { @class = "form-control input-sm" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].Contact, new { @class = "form-control input-sm" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.registration[i].CompanyName, new { @class = "form-control input-sm" })
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td colspan="15">
                                            <div class="row css25">
                                                <div class="col-md-12">
                                                    <div class="text-center">
                                                        <button id="btnSave" type="button" onclick="SaveRegistration()" class="btn btn-success btn-frmt green btn-sm"><i class="fa fa-floppy-o"></i>&nbsp;Save</button> &nbsp;&nbsp;&nbsp;
                                                        <button class="btn btn-default btn-sm" type="button" onclick="navigatetoList()"><i class="fa fa-backward"></i>&nbsp;Back</button>&nbsp;&nbsp;&nbsp;
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    }
                    <div class="row css25" id="webGridDisplay">
                        <div style="overflow-x: scroll; width: 100%" id="gridContent">
                            @grid.GetHtml(
                        columns: grid.Columns(
                            grid.Column("", "S No.", canSort: false,
                                        format:
                                        @<text>
                                            <div style='width:35px;'>
                                                @(item.WebGrid.Rows.IndexOf(item) + 1).
                                            </div>
                                        </text>),
                                grid.Column("StudentName", "Student Name", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:150px;'>
                                                @(item.StudentName)
                                            </div>
                                        </text>),
                                grid.Column("Amount", "Amount", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:70px;'>
                                                <span class="center">
                                                    @ConvertToInt64dollar(item.Amount)
                                                </span>
                                            </div>
                                        </text>),
                                grid.Column("WHTPercent", "WHT %", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:50px;'>
                                                <span class="center">
                                                    @ConvertToInt64percent(item.WHTPercent)
                                                </span>
                                            </div>
                                        </text>),
                                grid.Column("WHTAmount", "WHT Amount", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:80px;'>
                                                <span class="center">
                                                    @ConvertToInt64dollar(item.WHTAmount)
                                                </span>
                                            </div>
                                        </text>),
                                grid.Column("VATPercent", "VAT/TAX %",
                                format:
                                @<text>
                                    <div style='width:80px;'>
                                        <span class="center">
                                            @ConvertToInt64dollar(item.VATPercent)
                                        </span>
                                    </div>
                                </text>
                                , canSort: true, style: "center"),
                                grid.Column("VATAmount", "VAT/TAX Amount", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:100px;'>
                                                <span class="center">
                                                    @ConvertToInt64dollar(item.VATAmount)
                                                </span>
                                            </div>
                                        </text>),
                                 grid.Column("TotalAmount", "Total Amount", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:75px;'>
                                                <span class="center">
                                                    @ConvertToInt64dollar(item.TotalAmount)
                                                </span>
                                            </div>
                                        </text>),
                                grid.Column("Payment1", "Payment 1", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:70px;'>
                                                <span class="center">
                                                    <a style="cursor:pointer;text-decoration:underline;">
                                                        <span data-placement="top" data-toggle="popover" data-html="true" data-title="Payment 1 Details" data-content="@PaymentDetails(item.Payment1Date, item.Payment1Type, item.ChequeNo1)"
                                                              onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-original-title="" title="">@ConvertToInt64dollar(item.Payment1)</span>
                                                        </a>
                                                    </span>
                                                </div>
                                        </text>),
                                grid.Column("Payment2", "Payment 2", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:70px;'>
                                                <span class="center">
                                                    <a style="cursor:pointer;text-decoration:underline;">
                                                        <span data-placement="top" data-toggle="popover" data-html="true" data-title="Payment 2 Details" data-content="@PaymentDetails(item.Payment2Date, item.Payment2Type, item.ChequeNo2)"
                                                              onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-original-title="" title="">@ConvertToInt64dollar(item.Payment2)</span>
                                                        </a>
                                                    </span>
                                                </div>
                                        </text>),
                                grid.Column("Payment3", "Payment 3", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:70px;'>
                                                <span class="center">
                                                    <a style="cursor:pointer;text-decoration:underline;">
                                                        <span data-placement="top" data-toggle="popover" data-html="true" data-title="Payment 3 Details" data-content="@PaymentDetails(item.Payment3Date, item.Payment3Type, item.ChequeNo3)"
                                                              onmouseover="mouseover(this)" onmouseout="mouseleave(this)" data-original-title="" title="">@ConvertToInt64dollar(item.Payment3)</span>
                                                        </a>
                                                    </span>
                                                </div>
                                        </text>),
                                grid.Column("BalanceAmount", "Balance", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:70px;'>
                                                <span class="center">
                                                    @ConvertToInt64dollar(item.BalanceAmount)
                                                </span>
                                            </div>
                                        </text>),
                                grid.Column("Email", "Email", canSort: true),
                                grid.Column("Contact", "Contact", canSort: true),
                                grid.Column("CompanyName", "Company Name", canSort: true,
                                        format:
                                        @<text>
                                            <div style='width:100px;'>
                                                <span class="center">
                                                    @(item.CompanyName)
                                                </span>
                                            </div>
                                        </text>)),
                                            tableStyle: "table")
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="pull-right">@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section SectionScripts
    {
    <script type="text/javascript">
        $(function () {
            $('#webGridPublicEdit').hide();
            $('#webGridPrivateEdit').hide();
            $('#PrivateElementsOnly').hide();
            $('#liRegistrationList').addClass('active');

            var myArray = @Html.Raw(JsonConvert.SerializeObject(myArray));
            @if (reg > 0)
        {
            <text>
            $('#gridContent tbody').append('<tr class="bordertop"><td></td><td>Summary</td><td><span class="center">@ConvertToInt64dollar(myArray[0])</span></td><td></td><td><span class="center">@ConvertToInt64dollar(myArray[1])</span></td><td></td><td><span class="center">         @ConvertToInt64dollar(myArray[2])</span></td><td><span class="center">         @ConvertToInt64dollar(myArray[3]) </span></td><td><span class="center">         @ConvertToInt64dollar(myArray[4]) </span></td><td><span class="center">         @ConvertToInt64dollar(myArray[5])</span></td><td><span class="center">         @ConvertToInt64dollar(myArray[6]) </span></td><td><span class="center">         @ConvertToInt64dollar(myArray[7]) </span></td><td><span class="center">         @ConvertToInt64dollar(myArray[8]) </span></td><td></td><td></td><td></td></tr>');
            </text>
            }

            $('#lblmsg').hide();
            $('#TrainingDetails').hide();
            var trid = $('#TrainingConfirmationID').val();
            debugger;
            if (trid != null && trid != '') {
                $('#TrainingDetails').show();
                $('#lblmsg').show();
                @*@if(Model.registration.Count() >= Model.trainingconfDetail.NoOfStudents)
                    {
                    <text>$('#addbtn').attr('disabled', 'disabled');</text>
                }
                else
                {
                    <text>$('#addbtn').removeAttr('disabled', 'disabled');</text>
                }*@
            }
        });

        function SaveRegistration() {
            if ($('#frmRegistration').valid()) {
                $('#frmRegistration').submit();
            }
        }

        function ChangeMonth() {
            window.location = '@Url.Action("RegistrationList", "Registration", new { trainingConfirmationID = "", month = "", year = "" })' + '?trainingConfirmationID=&month=' + $('#Month').val() + "&year=" + $('#Year').val();
        };

        function mouseleave(el) {
            $(el).popover("hide");
        }

        function mouseover(el) {
            debugger;
            $(el).popover("show");
        }

        function ChangeEventID(el) {
            $('#eventid').val(el.value);
            window.location = '@Url.Action("RegistrationList", "Registration", new { trainingConfirmationID = "", month = "", year = "" })' + '?trainingConfirmationID=' + el.value + '&month=' + $('#Month').val() + "&year=" + $('#Year').val();

            $('#webGridDisplay').show();
            $('#webGridPublicEdit').hide();
            $('#webGridPrivateEdit').hide();
        };

        function navigatetoDetail() {
            @if (Model.trainingconfDetail.Private) {
                <text>
            $('#PrivateElementsOnly').show();
            $('#webGridPrivateEdit').show();
            $('#webGridPublicEdit').hide();
            </text>
            }
            else {
                <text>
            $('#webGridPublicEdit').show();
            $('#webGridPrivateEdit').hide();
            $('#PrivateElementsOnly').hide();
            </text>
            }
            $('#webGridDisplay').hide();
        };
        function navigatetoList() {
            $('#PrivateElementsOnly').hide();
            $('#webGridPrivateEdit').hide();
            $('#webGridPublicEdit').hide();
            $('#webGridDisplay').show();
        };

        function calculateTotalAmount(el)
        {
           
            var id=el.id;
            var row=id.split("_")
            var rowvalue=row[1];
            var amount=($('#registration_'+rowvalue+'__Amount').val()!="" &&!isNaN($('#registration_'+rowvalue+'__Amount').val())?parseInt($('#registration_'+rowvalue+'__Amount').val()):0);
            var vatpercent=($('#registration_'+rowvalue+'__VATPercent').val()!="" &&!isNaN($('#registration_'+rowvalue+'__VATPercent').val())?parseInt($('#registration_'+rowvalue+'__VATPercent').val()):0)
            var whtpercent=($('#registration_'+rowvalue+'__WHTPercent').val()!="" &&!isNaN($('#registration_'+rowvalue+'__WHTPercent').val())?parseInt($('#registration_'+rowvalue+'__WHTPercent').val()):0)
            var vatamount=0;
            if(amount!=0 &&vatpercent!=0)
            {
               vatamount=(amount*vatpercent/100);
                $('#registration_'+rowvalue+'__VATAmount').val(vatamount)
            }
            var whtamount=0;
            if(amount!=0 &&whtpercent!=0)
            {
                whtamount=(amount*whtpercent/100);
                $('#registration_'+rowvalue+'__WHTAmount').val(whtamount)
            }
            var Payment1=($('#registration_'+rowvalue+'__Payment1').val()!="" &&!isNaN($('#registration_'+rowvalue+'__Payment1').val())?parseInt($('#registration_'+rowvalue+'__Payment1').val()):0);
            var Payment2=($('#registration_'+rowvalue+'__Payment2').val()!="" &&!isNaN($('#registration_'+rowvalue+'__Payment2').val())?parseInt($('#registration_'+rowvalue+'__Payment2').val()):0);
            var Payment3=($('#registration_'+rowvalue+'__Payment3').val()!="" &&!isNaN($('#registration_'+rowvalue+'__Payment3').val())?parseInt($('#registration_'+rowvalue+'__Payment3').val()):0);

            var totalamount=((amount+vatamount)-(whtamount));
            $('#registration_'+rowvalue+'__TotalAmount').val(totalamount);
            var balanceamount=totalamount-(Payment1+Payment2+Payment3);
            balanceamount=$('#registration_'+rowvalue+'__BalanceAmount').val(balanceamount);

        }
    </script>
}
