@model  EDU.Web.Models.Registration
@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var listItems = new List<SelectListItem>()
                                          {
                                           new SelectListItem {Text = "Select Payment Type",   Value = "", Selected=true},
                                           new SelectListItem {Text = "CASH",   Value = "1"},
                                           new SelectListItem {Text = "CHEQUE", Value = "2"},
                                           new SelectListItem {Text = "BANK TRANSFER", Value = "3"}
                                       };
}
<div class="page page-forms-elements">

    @using (Html.BeginForm("Registration", "Registration", FormMethod.Post, new { id = "frmRegistration", name = "frmRegistration" }))
    {
        @Html.HiddenFor(x => x.RegistrationId)
        @Html.HiddenFor(x => x.TrainingConfirmationID)
        <div class="page-wrap">
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default panel-hovered panel-stacked mb30">
                        <div class="panel-heading">Registration</div>
                        <div class="panel-body">

                            <div class="row">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Student Name</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.StudentName, new { @class = "form-control" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Email ID</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @type = "email" })
                                    </div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Contact </span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.Contact, new { @class = "form-control numCss" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Company</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.CompanyName, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Amount</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.Amount, new { @class = "form-control numCss", onkeyup = "CalculateamountDisabled()" })
                                    </div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">WHT</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(x => x.WHTPercent, new { @class = "form-control numCss", onkeyup = "ValidateWHTPercent();ValidateWHTAmountPercent()" })
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(x => x.WHTAmount, new { @class = "form-control", @disabled = "disabled" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">VAT/TAX</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(x => x.VATPercent, new { @class = "form-control numCss", onkeyup = "ValidateVATPercent();ValidateVATAmountPercent()" })
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(x => x.VATAmount, new { @class = "form-control" ,@disabled="disabled"})
                                    </div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Other Deductions</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.OtherDeductionsAmount, new { @class = "form-control numCss", onkeyup = "CalTotalAmount()" })
                                    </div>
                                </div>
                            </div>


                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Total Amount</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.TotalAmount, new { @class = "form-control numCss" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Balance Amount</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(x => x.BalanceAmount, new { @class = "form-control numCss" })
                                    </div>
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment 1</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(x => x.Payment1, new { @class = "form-control numCss", onkeyup = "CalculateBalanceAmount()" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment Type</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(x => x.Payment1Type, listItems, new { @class = "form-control", onchange = "Payment1TypeChange(this)" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment 1 Date</span>
                                    </label>
                                    <div class="col-md-2">
                                        <div class="input-group date" id="StartDt">
                                            @Html.TextBoxFor(x => x.Payment1Date, new { @class = "form-control dtCss" })
                                            <span class="input-group-addon">
                                                <i class="ion ion-calendar"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="cheque1" class="row css10">
                                <label class="col-md-2 control-label">
                                    <span class="pull-right"></span>
                                </label>
                                <div class="col-md-2">
                                </div>
                                <label id="lblCheque" class="col-md-2 control-label">
                                    <span class="pull-right">Cheque No</span>
                                </label>
                                <label id="lblbanktransfer" class="col-md-2 control-label">
                                    <span class="pull-right">Transaction Id</span>
                                </label>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(x => x.ChequeNo1, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment 2</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(x => x.Payment2, new { @class = "form-control numCss", onkeyup = "CalculateBalanceAmount()" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment Type</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(x => x.Payment2Type, listItems, new { @class = "form-control", onchange = "Payment2TypeChange(this)" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment 2 Date</span>
                                    </label>
                                    <div class="col-md-2">
                                        <div class="input-group date" id="StartDt2">
                                            @Html.TextBoxFor(x => x.Payment2Date, new { @class = "form-control dtCss" })
                                            <span class="input-group-addon">
                                                <i class="ion ion-calendar"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="cheque2" class="row css10">
                                <label class="col-md-2 control-label">
                                    <span class="pull-right"></span>
                                </label>
                                <div class="col-md-2">
                                </div>
                                <label id="lblCheque2" class="col-md-2 control-label">
                                    <span class="pull-right">Cheque No</span>
                                </label>
                                <label id="lblbanktransfer2" class="col-md-2 control-label">
                                    <span class="pull-right">Transaction Id</span>
                                </label>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(x => x.ChequeNo2, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row css10">
                                <div class="form-group">
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment 3</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(x => x.Payment3, new { @class = "form-control numCss", onkeyup = "CalculateBalanceAmount()" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment Type</span>
                                    </label>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(x => x.Payment3Type, listItems, new { @class = "form-control", onchange = "Payment3TypeChange(this)" })
                                    </div>
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Payment 3 Date</span>
                                    </label>
                                    <div class="col-md-2">
                                        <div class="input-group date" id="StartDt3">
                                            @Html.TextBoxFor(x => x.Payment3Date, new { @class = "form-control dtCss" })
                                            <span class="input-group-addon">
                                                <i class="ion ion-calendar"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="cheque3" class="row css10">
                                <label class="col-md-2 control-label">
                                    <span class="pull-right"></span>
                                </label>
                                <div class="col-md-2">
                                </div>
                                <label id="lblCheque3" class="col-md-2 control-label">
                                    <span class="pull-right">Cheque No</span>
                                </label>
                                <label id="lblbanktransfer3" class="col-md-2 control-label">
                                    <span class="pull-right">Transaction Id</span>
                                </label>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(x => x.ChequeNo3, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="text-center">
                                        <button type="button" onclick="SaveRegistration()" class="btn btn-success btn-frmt green btn-sm"><i class="fa fa-floppy-o"></i>&nbsp;Save</button> &nbsp;&nbsp;&nbsp;
                                        <button class="btn btn-default btn-sm" type="button" onclick="navigatetoList()"><i class="fa fa-backward"></i>&nbsp;Back</button>&nbsp;&nbsp;&nbsp;
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section SectionScripts {
    <script src="@Url.Content("~/Scripts/moment.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap-datetimepicker.js")"></script>
    <script type="text/javascript">

        $(function () {
            $('#StartDt,#StartDt2,#StartDt3').datetimepicker({
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down'
                },
                //minDate: new Date(),
                format: 'DD/MM/YYYY'
            });

            $('#WHTPercent').attr('disabled', 'disabled');
            $('#VATPercent').attr('disabled', 'disabled');
            $('#OtherDeductionsAmount').attr('disabled', 'disabled');
            $('#TotalAmount').attr('disabled', 'disabled');
            $('#BalanceAmount').attr('disabled', 'disabled');
            $('#Payment1').attr('disabled', 'disabled');
            $('#Payment2').attr('disabled', 'disabled');
            $('#Payment3').attr('disabled', 'disabled');
            $('#cheque1').hide();
            $('#cheque2').hide();
            $('#cheque3').hide();

            @if(Model.RegistrationId!=-1)
            {
                if(Model.Payment1Type!=null && Model.Payment1Type.Value!=1)
                {
                         <text>
            $('#lblbanktransfer').hide();
            $('#lblCheque').hide();
            @if(Model.Payment1Type.Value==2)
                    {
                        <text>
            $('#lblCheque').show();
            $('#cheque1').show();
            </text>
                     }
            @if(Model.Payment1Type.Value==3)
                     {
                         <text>
            $('#lblbanktransfer').show();
            $('#cheque1').show();
            </text>
                     }

            </text>
                }
                else if(Model.Payment2Type != null && Model.Payment2Type.Value!=1)
                {
                         <text>
            $('#lblbanktransfer2').hide();
            $('#lblCheque2').hide();
            @if(Model.Payment1Type.Value==2)
                    {
                        <text>
            $('#lblCheque2').show();
            $('#cheque2').show();
            </text>
                    }
            @if(Model.Payment1Type.Value==3)
                     {
                         <text>
            $('#lblbanktransfer2').show();
            $('#cheque2').show();
            </text>
                     }
            </text>
                }
                else if(Model.Payment3Type != null && Model.Payment3Type.Value!=1)
                {
                    <text>
            $('#lblbanktransfer3').hide();
            $('#lblCheque3').hide();
            @if(Model.Payment1Type.Value==2)
                    {
                        <text>
            $('#lblCheque3').show();
            $('#cheque3').show();
            </text>
                    }
            @if(Model.Payment1Type.Value==3)
                     {
                         <text>
            $('#lblbanktransfer3').show();
            $('#cheque3').show();
            </text>
                     }
            </text>
                }

            <text>
            $('#Amount').attr('disabled', 'disabled')
            $('#Payment1').removeAttr('disabled', 'disabled');
            $('#Payment2').removeAttr('disabled', 'disabled');
            $('#Payment3').removeAttr('disabled', 'disabled');
            </text>
            }
        });

        function navigatetoList() {
            var trid = $('#TrainingConfirmationID').val();
            window.location = '@Url.Content("~/Registration/RegistrationList")' + "?trainingConfirmationID=" + trid;
        };

        function RemoveDisabledFields() {
            $('#Amount').removeAttr('disabled', 'disabled')
            $('#WHTAmount').removeAttr('disabled', 'disabled');
            $('#VATAmount').removeAttr('disabled', 'disabled');
            $('#WHTPercent').removeAttr('disabled', 'disabled');
            $('#VATPercent').removeAttr('disabled', 'disabled');
            $('#OtherDeductionsAmount').removeAttr('disabled', 'disabled');
            $('#Payment1').removeAttr('disabled', 'disabled');
            $('#Payment2').removeAttr('disabled', 'disabled');
            $('#Payment3').removeAttr('disabled', 'disabled');
            $('#TotalAmount').removeAttr('disabled', 'disabled');
            $('#BalanceAmount').removeAttr('disabled', 'disabled');
        }
        function SaveRegistration() {
            if ($('#frmRegistration').valid()) {
                RemoveDisabledFields();
                $('#frmRegistration').submit();
            }
        }
        $('#frmRegistration').validate({
            rules: {
                'StudentName': {
                    required: true
                },
                'Amount': {
                    required: true
                },
                'Email': {
                    required: true,
                    email: true
                },
                'CompanyName': {
                    required: true
                },
                'Contact': {
                    required: true
                }
            }
        });

        function CalculateamountDisabled() {
            var Amount = parseInt($('#Amount').val());
            if (Amount != null && !isNaN(Amount) && Amount != 0) {
                $('#WHTPercent').removeAttr('disabled', 'disabled');
                $('#VATPercent').removeAttr('disabled', 'disabled');
                $('#OtherDeductionsAmount').removeAttr('disabled', 'disabled');
                $('#Payment1').removeAttr('disabled', 'disabled');
                $('#Payment2').removeAttr('disabled', 'disabled');
                $('#Payment3').removeAttr('disabled', 'disabled');
            }
            else {
                $('#WHTPercent').val('');
                $('#TotalAmount').val('');
                $('#VATPercent').val('');
                $('#OtherDeductionsAmount').val('');
                $('#WHTAmount').val('');
                $('#VATAmount').val('');
                $('#WHTPercent').attr('disabled', 'disabled');
                $('#VATPercent').attr('disabled', 'disabled');
                $('#OtherDeductionsAmount').attr('disabled', 'disabled');
                $('#Payment1').attr('disabled', 'disabled');
                $('#Payment2').attr('disabled', 'disabled');
                $('#Payment3').attr('disabled', 'disabled');
            }
            ValidateWHTAmountPercent();
            ValidateVATAmountPercent();
            CalTotalAmount();
            CalculateBalanceAmount();
        }

        function ValidateWHTPercent() {
            var percent = parseInt($('#WHTPercent').val());
            if (percent > 100) {
                alert("WHTPercent can not greater than 100");
                $('#WHTPercent').val('');
            }
            CalTotalAmount();
        }
        function ValidateVATPercent() {
            var percent = parseInt($('#VATPercent').val());
            if (percent > 100) {
                alert("WHTPercent can not greater than 100");
                $('#VATPercent').val('');
            }
            CalTotalAmount();
        }
        function ValidateWHTAmountPercent() {

            var Amount = parseInt($('#Amount').val());
            var WHT = parseInt($('#WHTPercent').val());
            if (!isNaN(WHT) && WHT != 0) {
                var WHTAmount = Amount * WHT / 100;
                $('#WHTAmount').val(WHTAmount);
            }
            else {
                $('#WHTAmount').val('')
            }
            CalTotalAmount();
            CalculateBalanceAmount();
        }

        function ValidateVATAmountPercent() {

            var Amount = parseInt($('#Amount').val());
            var VAT = parseInt($('#VATPercent').val());
            if (!isNaN(VAT) && VAT != 0) {
                var VATAmount = Amount * VAT / 100;
                $('#VATAmount').val(VATAmount);
            }
            else {
                $('#VATAmount').val('');
            }
            CalTotalAmount();
            CalculateBalanceAmount();
        }

        function CalTotalAmount() {

            var Amount = parseInt($('#Amount').val());
            var WHT = parseInt($('#WHTPercent').val());
            var VAT = parseInt($('#VATPercent').val());
            var OtherDeductionsAmount = parseInt($('#OtherDeductionsAmount').val());
            if (Amount) {
                $('#TotalAmount').val(Amount);
            }
            if (Amount && WHT) {
                var WHTAmount = parseInt(Amount * WHT / 100);
                var total = parseInt(Amount - WHTAmount);
                $('#TotalAmount').val(total);
            }
            if (Amount && VAT) {
                var VATAmount = parseInt(Amount * VAT / 100);
                var total = parseInt(Amount + VATAmount);
                $('#TotalAmount').val(total);
            }
            if (Amount && OtherDeductionsAmount) {
                var total = parseInt(Amount - OtherDeductionsAmount);
                $('#TotalAmount').val(total);
            }
            if (Amount && OtherDeductionsAmount && WHT) {
                var WHTAmount = parseInt(Amount * WHT / 100);
                var total = parseInt(Amount - (WHTAmount + OtherDeductionsAmount));
                $('#TotalAmount').val(total);
            }
            if (Amount && OtherDeductionsAmount && VAT) {
                var VATAmount = parseInt(Amount * VAT / 100);
                var total = parseInt(Amount + VATAmount + -OtherDeductionsAmount);
                $('#TotalAmount').val(total);
            }
            if (Amount && WHT && VAT) {
                var WHTAmount = parseInt(Amount * WHT / 100);
                var VATAmount = parseInt(Amount * VAT / 100);
                var total = parseInt(Amount + VATAmount - WHTAmount);
                $('#TotalAmount').val(total);

            }

            if (Amount && WHT && VAT && OtherDeductionsAmount) {
                var WHTAmount = parseInt(Amount * WHT / 100);
                var VATAmount = parseInt(Amount * VAT / 100);
                var total = parseInt(Amount + VATAmount - (WHTAmount + OtherDeductionsAmount));
                $('#TotalAmount').val(total);

            }
            CalculateBalanceAmount();

        }

        function CalculateBalanceAmount() {
            var TotalAmount = parseInt($('#TotalAmount').val());
            parseInt($('#BalanceAmount').val(TotalAmount));
            if (isNaN(TotalAmount)) {
                $('#BalanceAmount').val('')
            }
            var BalanceAmount = TotalAmount;
            var Payment1 = parseInt($('#Payment1').val());
            var Payment2 = parseInt($('#Payment2').val());
            var Payment3 = parseInt($('#Payment3').val());
            if (BalanceAmount && Payment1) {
                var p1 = BalanceAmount - Payment1;
                parseInt($('#BalanceAmount').val(p1));
            }
            if (BalanceAmount && Payment2) {
                var p2 = BalanceAmount - Payment2;
                parseInt($('#BalanceAmount').val(p2));
            }
            if (BalanceAmount && Payment3) {
                var p3 = BalanceAmount - Payment3;
                parseInt($('#BalanceAmount').val(p3));
            }
            if (BalanceAmount && Payment1 && Payment2) {
                var p = BalanceAmount - Payment1 - Payment2;
                parseInt($('#BalanceAmount').val(p));
            }
            if (BalanceAmount && Payment1 && Payment2 && Payment3) {
                var p = BalanceAmount - Payment1 - Payment2 - Payment3;
                parseInt($('#BalanceAmount').val(p));
            }

        }
        function Payment1TypeChange(el) {
            $('#lblbanktransfer').hide();
            $('#lblCheque').hide();
            if (el.value == "2") {
                $('#ChequeNo1').val('');
                $('#cheque1').show();
                $('#lblCheque').show();
            }
            else if (el.value == "3") {
                $('#ChequeNo1').val('');
                $('#cheque1').show();
                $('#lblbanktransfer').show();

            }
            else if (el.value == "1") {
                $('#ChequeNo1').val('');
                $('#cheque1').hide();
            }
            else {
                $('#ChequeNo1').val('');
                $('#cheque1').hide();
            }

        }
        function Payment2TypeChange(el) {
            $('#lblbanktransfer2').hide();
            $('#lblCheque2').hide();

            if (el.value == "2") {
                $('#ChequeNo2').val('');
                $('#cheque2').show();
                $('#lblCheque2').show();
            }
            else if (el.value == "3") {
                $('#ChequeNo2').val('');
                $('#cheque2').show();
                $('#lblbanktransfer2').show();

            }
            else if (el.value == "1") {
                $('#ChequeNo2').val('');
                $('#cheque2').hide();
            }
            else {
                $('#ChequeNo2').val('');
                $('#cheque2').hide();
            }
        }
        function Payment3TypeChange(el) {
            $('#lblbanktransfer3').hide();
            $('#lblCheque3').hide();

            if (el.value == "2") {
                $('#ChequeNo3').val('');
                $('#cheque3').show();
                $('#lblCheque3').show();
            }
            else if (el.value == "3") {
                $('#ChequeNo3').val('');
                $('#cheque3').show();
                $('#lblbanktransfer3').show();

            }
            else if (el.value == "1") {
                $('#ChequeNo3').val('');
                $('#cheque3').hide();
            }
            else {
                $('#ChequeNo3').val('');
                $('#cheque3').hide();
            }
        }

    </script>
}
