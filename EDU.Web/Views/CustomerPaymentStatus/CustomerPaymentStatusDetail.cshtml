
@model EDU.Web.ViewModels.CustomerPaymentStatusModel.CustomerPaymentVM
@{ 
    var year = (int)ViewData["year"];
    var month = (short?)ViewData["month"];
}
<div class="modal-dialog">
    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">@ViewBag.Title</h4>
        </div>
        <div class="modal-body" id="FinancialTransactionModalBody">
            @Html.HiddenFor(x => x.CustomerPaymentId)
            @Html.HiddenFor(x => x.RegistrationId)
            @Html.HiddenFor(x => x.TrainingConfirmationID)
            @Html.HiddenFor(x=>x.Year)
            @Html.HiddenFor(x => x.Month)
            <div class="row">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Customer Name</span>
                    </label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control input-sm", @disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Invoice Amount</span>
                    </label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.InvoiceAmount, "{0:#.#}", new { @class = "form-control input-sm numCss", @placeholder = "Invoice Amount", @disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Paid Amount</span>
                    </label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.PaidAmount, "{0:#.#}", new { @class = "form-control input-sm numCss", @placeholder = "PaidAmount", @disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Balance Amount</span>
                    </label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.BalanceAmount, "{0:#.#}", new { @class = "form-control input-sm numCss", @placeholder = "Balance Amount", @disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Other Receivables</span>
                    </label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.OtherReceivablesAmount, "{0:#.#}", new { @class = "form-control input-sm numCss", @placeholder = "Other Receivables Amount", onkeyup = "CalculateTotalAmount()" })
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Total Amount</span>
                    </label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.TotalAmount, "{0:#.#}", new { @class = "form-control input-sm numCss", @placeholder = "TotalAmount", @disabled = "disabled" })
                    </div>
                </div>
            </div>

            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Due Date</span>
                    </label>
                    <div class="col-md-6">
                        <div class="input-group date" id="DDate">
                            @Html.TextBoxFor(x => x.DueDate, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm dtCss" })
                            <span class="input-group-addon input-sm">
                                <i class="ion ion-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Receipt Date</span>
                    </label>
                    <div class="col-md-6">
                        <div class="input-group date" id="RDate">
                            @Html.TextBoxFor(x => x.ReceiptDate, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm dtCss", @required=true })
                            <span class="input-group-addon input-sm">
                                <i class="ion ion-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row css10">
                <div class="form-group">
                    <label class="col-md-3 control-label col-md-offset-1">
                        <span>Reference Doc</span>
                    </label>
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.FileName, new { type = "file", @class = "form-control input-sm", id = Profile })
                        &nbsp;@Model.ReferenceDoc
                        @Html.HiddenFor(x => x.ReferenceDoc)
                    </div>
                </div>
            </div>
            <div class="modal-footer css10">
                <button type="button" id="btnSave" onclick="SaveCustomerPaymentStatus()" class="btn btn-success btn-frmt btn-sm"> <i class="fa fa-floppy-o"></i>&nbsp;Save</button>
                <button type="button" class="btn btn-default btn-frmt btn-sm" data-dismiss="modal"><i class="fa fa-times"></i>Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
        $(function () {
            $('#DDate, #RDate').datepicker({
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down'
                },
                minDate: new Date(),
                format: 'dd/mm/yyyy',
                autoclose: true
            });
           @if(Model.CustomerPaymentId != -1)
           {
               <text>
            @if (Model.DueDate.HasValue) {
                 <text>
            $('#DueDate').val('@Model.DueDate.Value.ToString("dd/MM/yyyy")');
            </text>
            }

            @if (Model.ReceiptDate.HasValue) {
                 <text>
            $('#ReceiptDate').val('@Model.ReceiptDate.Value.ToString("dd/MM/yyyy")');
            </text>
            }

             </text>
           }
        });
</script>
