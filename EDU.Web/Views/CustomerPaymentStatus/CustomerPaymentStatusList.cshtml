
@using Newtonsoft.Json;

@model EDU.Web.ViewModels.CustomerPaymentStatusModel.CustomerPaymentStatusVM
@{
    ViewBag.Title = "CustomerPaymentStatusList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    WebGrid grid = new WebGrid(Model.customerPayment, rowsPerPage: 15);
    grid.Pager(WebGridPagerModes.All);

    //var cPayment = Model.customerPayment.Count();
    //var myArray = (List<decimal?>)ViewData["Summary"];
}
@functions{
    public string ConvertToInt64dollar(decimal? data)
    {
        if (data != null && data != 0)
            return new HtmlString("$ " + Convert.ToInt64(data)).ToString();
        else
            return null;
    }
}

@{
    var listMonths = new List<SelectListItem>()
                                          {
                                           new SelectListItem {Text = "Select Month",   Value = "0"},
                                           new SelectListItem {Text = "Janaury",   Value = "1"},
                                           new SelectListItem {Text = "February", Value = "2"},
                                           new SelectListItem {Text = "March", Value = "3"},
                                           new SelectListItem {Text = "April",   Value = "4"},
                                           new SelectListItem {Text = "May", Value = "5"},
                                           new SelectListItem {Text = "June", Value = "6"},
                                           new SelectListItem {Text = "July",   Value = "7"},
                                           new SelectListItem {Text = "August", Value = "8"},
                                           new SelectListItem {Text = "September", Value = "9"},
                                           new SelectListItem {Text = "October",   Value = "10"},
                                           new SelectListItem {Text = "November", Value = "11"},
                                           new SelectListItem {Text = "December", Value = "12"}
                                       };
}
<style>
    .centerbox {
        margin: auto;
        width: 100%;
        border: 1px solid gray;
        border-radius: 20px;
    }

    .center {
        text-align: center !important;
    }

    .right {
        text-align: right !important;
    }

    .popover {
        color: black;
        min-width: 300px;
    }

    .popover-title {
        background-color: #F7F7F7;
        border-bottom: 1px solid #EBEBEB;
        border-radius: 5px 5px 0 0;
        font-size: 15px;
        font-weight: bold;
        line-height: 18px;
        margin: 0;
        padding: 8px 14px;
    }

    .bordertop {
        border-top: 2px solid gray !important;
        border-bottom: 2px solid gray !important;
        color: #D73925;
        /*font-family: 'Bebas Neue'*/
    }
</style>
@functions {

    public string ConvertToInt64(decimal? data)
    {
        if (data != null)
            return Convert.ToInt64(data.Value).ToString();
        else
            return null;
    }


}
@using (Html.BeginForm("SaveCustomerPaymentStatus", "CustomerPaymentStatus", FormMethod.Post, new { id = "frmCustomerPaymentStatus", name = "frmCustomerPaymentStatus", enctype = "multipart/form-data" }))
{
    <div class="page page-forms-elements">
        <div class="page-wrap">
            <div class="panel panel-default">
                <div class="box" id="grid">
                    <div class="box-header">
                        <div style="display:-webkit-inline-box">
                            <h4> Customer Payment Status</h4>
                        </div>
                        <div class="box-tools">
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="form-group">
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Year</span>
                                </label>
                                <div class="col-md-1">
                                    @Html.DropDownListFor(x => x.customerPayment.FirstOrDefault().Year, Enumerable.Range(2014, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), "Select Year ", new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                                </div>
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Month</span>
                                </label>
                                <div class="col-md-1">
                                    @Html.DropDownListFor(x => x.customerPayment.FirstOrDefault().Month, listMonths, new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                                </div>
                            </div>
                        </div>

                        <div class="row" style="margin-top:20px;">
                        </div>
                        <div class="css10" style="overflow-x: scroll; width: 100%" id="gridContent">
                            @grid.GetHtml(
                     columns: grid.Columns(

                          grid.Column("", "#Action", canSort: false,
                                         format:
                                        @<text>
                                            <div style='width:60px;'>
                                                @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                                {
                                                    <button type="button" id="btn_edit_@item.WebGrid.Rows.IndexOf(item)" class="btn btn-primary btn-xs waves-effect btn_edit " data-toggle="modal" data-object='@JsonConvert.SerializeObject(Model.customerPayment[item.WebGrid.Rows.IndexOf(item)])' onclick="EditCustomerPaymentStatusDetail(this)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                                    @*<button class="btn btn-xs btn-success waves-effect" onclick="location.href ='@Url.Content("~/Registration/Registration?Id=" + item.RegistrationId + "&trainingConfirmationID=" + item.TrainingConfirmationID)'"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>*@
                                                if (item.CustomerPaymentId > 0)
                                                {
                                                    <button type="button" class="btn btn-xs btn-danger waves-effect" onclick="DeleteCustomerPaymentStatus(@item.CustomerPaymentId)"><i class="fa fa-trash-o" style="padding-left: 5px;"></i></button>
                                                    }
                                                }
                                            </div>
                                        </text>),
                             grid.Column("TrainingConfirmationID", "Event ID", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:90px;'>
                                            @(item.TrainingConfirmationID)
                                        </div>
                                    </text>),
                             grid.Column("CustomerName", "Customer", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:90px;'>
                                            @(item.CustomerName)
                                        </div>
                                    </text>),
                             grid.Column("InvoiceAmount", "Invoice Amount", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:88px;'>
                                            <span class="center">
                                                @ConvertToInt64dollar(item.InvoiceAmount)
                                            </span>
                                        </div>
                                    </text>,style:"center"),
                             grid.Column("PaidAmount", "PaidAmount", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:68px;'>
                                            <span class="center">
                                                @ConvertToInt64dollar(item.PaidAmount)
                                            </span>
                                        </div>
                                    </text>, style:"center"),
                             grid.Column("BalanceAmount", "Balance Amount", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:80px;'>
                                            <span class="center">
                                                @ConvertToInt64dollar(item.BalanceAmount)
                                            </span>
                                        </div>
                                    </text>,style:"center"),
                             grid.Column("OtherReceivablesAmount", "Other Receivables", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:90px;'>
                                            <span class="center">
                                                @ConvertToInt64dollar(item.OtherReceivablesAmount)
                                            </span>
                                        </div>
                                    </text>,style:"center"),
                              grid.Column("TotalAmount", "Total Amount", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:75px;'>
                                            <span class="center">
                                                @ConvertToInt64dollar(item.TotalAmount)
                                            </span>
                                        </div>
                                    </text>,style:"center"),
                         grid.Column("DueDate", "Due Date", format: @<text> @(item.DueDate == null ? null : item.DueDate.ToString("dd/MM/yyyy")) </text>, canSort: true, style: "center"),
                         grid.Column("ReceiptDate", "Receipt Date", format: @<text> @(item.ReceiptDate == null ? null : item.ReceiptDate.ToString("dd/MM/yyyy")) </text>, canSort: true, style: "center"),
                             grid.Column("ReferenceDoc", "Reference Doc",
                             format:
                            @<text>
                                <a style="cursor:pointer;text-decoration:underline;" href="~/Uploads/CPS_@item.CustomerPaymentId/@item.ReferenceDoc" target="_blank">@item.ReferenceDoc</a>
                            </text>, canSort: true)),
                                         tableStyle: "table")
                        </div>
                        <div class="row css10">
                            <div class="col-sm-12">
                                <div class="pull-right">@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
 
    <div id="myModal" class="modal fade" role="dialog">
      
    </div>
}
@using (Html.BeginForm("DeleteCustomerPaymentStatus", "CustomerPaymentStatus", FormMethod.Post, new { id = "frmDeleteCustomerPaymentStatus", name = "frmDeleteCustomerPaymentStatus", enctype = "multipart/form-data" }))
{

}
@section SectionScripts
    {
    <script type="text/javascript">
        $(function () {

            $('#liCustomerPaymentStatusList').addClass('active');

            @*var myArray = @Html.Raw(JsonConvert.SerializeObject(myArray));
            @if (cPayment > 0)
        {
            <text>
            $('#gridContent tbody').append('<tr class="bordertop"><td></td><td>Summary</td><td><span class="center">@ConvertToInt64dollar(myArray[0]) </span></td><td><span class="center">@ConvertToInt64dollar(myArray[1])</span></td><td><span class="center">@ConvertToInt64dollar(myArray[2])</span></td><td><span class="center">@ConvertToInt64dollar(myArray[3]) </span></td><td><span class="center">@ConvertToInt64dollar(myArray[4]) </span></td><td></td><td></td><td></td></tr>');
            </text>
            }*@
        });

        function mouseleave(el) {
            $(el).popover("hide");
        }

        function mouseover(el) {
            debugger;
            $(el).popover("show");
        }
        function ChangeMonth() {
            window.location = '@Url.Action("CustomerPaymentStatusList", "CustomerPaymentStatus", new { month = "", year = "" })' + '?month=' + $('#Month').val() + "&year=" + $('#Year').val();
        };

        //$(function () {
        //    $('#TrainingDetails').hide();
        //    $('#addbtn').attr('disabled', 'disabled');
        //    var trid = $('#TrainingConfirmationID').val();

        //    if (trid != null && trid != '') {
        //        $('#TrainingDetails').show();
        //    }
        //});

        @*function ChangeEventID(el) {
            $('#eventid').val(el.value);
            window.location = '@Url.Action("CustomerPaymentStatusList", "CustomerPaymentStatus", new { trainingConfirmationID = ""})' + '?trainingConfirmationID=' + el.value;
        };*@

        function EditCustomerPaymentStatusDetail(el) {
            debugger;
            var obj = $(el).data('object');
            $.ajax({
                url: '@Url.Content("~/CustomerPaymentStatus/CustomerPaymentStatusDetail/")',
                data: JSON.stringify(obj),
                method: 'post',
                contentType: 'application/json; charset=utf-8',
                success: function (html) {
                    debugger;
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                    var invoiceamt = $('#InvoiceAmount').val();
                    $('#TotalAmount').val(invoiceamt);
                },
                error: function (err) {
                    debugger;

                }
            });
        }

        function DeleteCustomerPaymentStatus(id) {
            if (confirm("Are you sure, You want to delete")) {
                $.ajax({
                    url: '@Url.Content("~/CustomerPaymentStatus/DeleteCustomerPaymentStatus?CustomerPaymentId=")' + id,
                    type: 'POST',
                    contentType: 'application/json',
                    success: function (data) {
                        if (data) {
                            alert("Deleted Successfully");
                            location.reload();
                        }
                    },
                    error: function (e) {
                    }
                });
            }
        }
        function CalculateTotalAmount() {
            var invoiceamt = parseInt($('#InvoiceAmount').val());
            var OtherReceivablesAmount = parseInt($('#OtherReceivablesAmount').val());
            var result = (isNaN(invoiceamt) ? 0 : invoiceamt) + (isNaN(OtherReceivablesAmount) ? 0 : OtherReceivablesAmount);
            $('#TotalAmount').val(result);
        }

        $('#frmCustomerPaymentStatus').validate({
            rules: {
                OtherReceivablesAmount: {
                    required: true
                }
            }
        });
        function SaveCustomerPaymentStatus(id) {
            if ($('#frmCustomerPaymentStatus').valid()) {
                RemoveDisabledFields();
                $('#frmCustomerPaymentStatus').submit();
            }

        }

        function RemoveDisabledFields() {
            $('#CustomerName').removeAttr('disabled');
            $('#InvoiceAmount').removeAttr('disabled');
            $('#PaidAmount').removeAttr('disabled');
            $('#BalanceAmount').removeAttr('disabled');
            $('#TotalAmount').removeAttr('disabled');
        }
    </script>
}




