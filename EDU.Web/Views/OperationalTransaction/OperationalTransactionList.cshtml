@model EDU.Web.ViewModels.OperationalTransactionModel.OperationalTransactionVM
@{
    ViewBag.Title = "OperationalTransactionList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    WebGrid grid = new WebGrid(rowsPerPage: 10);
    grid.Pager(WebGridPagerModes.All);
}
@{
    var listMonths = new List<SelectListItem>()
                                          {
                                           new SelectListItem {Text = "Select Month",   Value = "0"},
                                           new SelectListItem {Text = "Janaury",   Value = "1"},
                                           new SelectListItem {Text = "February", Value = "2"},
                                           new SelectListItem {Text = "March", Value = "3"},
                                           new SelectListItem {Text = "April",   Value = "4"},
                                           new SelectListItem {Text = "May", Value = "5"},
                                           new SelectListItem {Text = "June", Value = "6"},
                                           new SelectListItem {Text = "July",   Value = "7"},
                                           new SelectListItem {Text = "August", Value = "8"},
                                           new SelectListItem {Text = "September", Value = "9"},
                                           new SelectListItem {Text = "October",   Value = "10"},
                                           new SelectListItem {Text = "November", Value = "11"},
                                           new SelectListItem {Text = "December", Value = "12"}
                                       };
}
<div class="page page-forms-elements">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Operational Transaction List</h4>
                    <div class="box-tools">
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {
                            <button type="button" class="btn btn-info btn-sm waves-effect" data-toggle="modal" onclick="AddOperationalTransaction()"><i class="fa fa-plus"></i>Add New Operational Transaction</button>
                            // <button class="btn btn-info btn-sm waves-effect" type="button" onclick="AddEduProduct();"><i class="fa fa-plus"></i> Add New Product</button>
                        }
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="col-md-1 control-label col-md-offset-2">
                                <span>Select Month</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x=>x.Month, listMonths,new { @class="form-control"})
                            </div>
                        </div>
                    </div>
                    @*<div>
                        @grid.GetHtml(
                                columns: grid.Columns(
                    grid.Column("ProductName", "Product", canSort: true),
                    grid.Column("CourseName", "Course Name", canSort: true),
                    grid.Column("NoOfDays", "No Of Days", canSort: true),
                    grid.Column("CountryName", "Country", canSort: true),
                    grid.Column("PublicPrice", "Public Price", format: @<text>  <span class="display-mode">@(item.PublicPrice > 0 ? Convert.ToInt32(item.PublicPrice) : "N/A") </span> </text>, style: "", canSort: true),
                    grid.Column("PrivatePrice", "Private Price", format: @<text>  <span class="display-mode">@(item.PrivatePrice > 0 ? Convert.ToInt32(item.PrivatePrice) : "N/A") </span> </text>, style: "", canSort: true),
                    grid.Column("", "#Action", canSort: false,
                                format:
                                @<text>
                                    @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                    {
                                        <button class="btn btn-xs btn-success waves-effect" onclick="EditCourse(@item.Id)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                        <button class="btn btn-xs btn-danger waves-effect" onclick="DeleteEduCourse(@item.Id)"><i class="fa fa-trash-o" style="padding-left: 5px;"></i></button>
                                    }
                                </text>)),
                                tableStyle: "table")
                    </div>*@
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="pull-right">@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("SaveOperationalTransaction", "OperationalTransaction", FormMethod.Post, new { id = "frmOperationalTransaction", name = "frmOperationalTransaction" }))
{
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}
@section SectionScripts{
    <script type="text/javascript">
        function AddOperationalTransaction() {
            debugger;
            $.ajax({
                url: '@Url.Content("~/OperationalTransaction/OperationalTransaction")',
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            });
        }

        function GetParticularsByCategory(Id)
        {
            debugger;
            if(Id.value)
            {
                debugger;
                $.ajax({
                    url: '@Url.Content("~/OperationalTransaction/GetParticularsByCategory?CategoryId=")' + Id.value,
                    method: 'get',
                    contentType: 'text/html',
                    success: function (data) {
                        debugger;
                        $('#ParticularsId').empty();
                        $('#ParticularsId').append($('<option></option>').val('').html(''));
                        $.each(data, function (key, value) {
                            $('#ParticularsId').append($('<option></option>').val(value.LookupID).html(value.LookupDescription));
                        });
                        $('#ParticularsId').removeAttr('disabled');
                    },
                    error: function (err) {

                    }
                });
            }

            else {
                $('#ParticularsId').empty();
                $('#ParticularsId').attr('disabled', 'disabled');
                $('#ParticularsId').append($('<option></option>').val('').html(''));
            }
        }

        function SaveOperationalTransaction()
        {

        }

       
    </script>
}
