@using System.Globalization;
@model IEnumerable<EDU.Web.ViewModels.OperationalTransactionModel.OperationalTransactionVM>
@{
    ViewBag.Title = "OperationalTransactionList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var grid = new WebGrid(Model, rowsPerPage: 10);
    grid.Pager(WebGridPagerModes.All);

    var count = Model.Count();
}
@functions {

    public string ConvertToInt64dollar(decimal? data)
    {
        if (data != null && data > 0)
            return new HtmlString("$ " + Convert.ToInt64(data.Value)).ToString();
        else
            return null;
    }
}
@{

    var listMonths = new List<SelectListItem>()
                                          {
                                           new SelectListItem {Text = "Select Month",   Value = "0"},
                                           new SelectListItem {Text = "Janaury",   Value = "1"},
                                           new SelectListItem {Text = "February", Value = "2"},
                                           new SelectListItem {Text = "March", Value = "3"},
                                           new SelectListItem {Text = "April",   Value = "4"},
                                           new SelectListItem {Text = "May", Value = "5"},
                                           new SelectListItem {Text = "June", Value = "6"},
                                           new SelectListItem {Text = "July",   Value = "7"},
                                           new SelectListItem {Text = "August", Value = "8"},
                                           new SelectListItem {Text = "September", Value = "9"},
                                           new SelectListItem {Text = "October",   Value = "10"},
                                           new SelectListItem {Text = "November", Value = "11"},
                                           new SelectListItem {Text = "December", Value = "12"}
                                       };


}
<style>
    .bordertop {
        border-top: 2px solid gray !important;
        border-bottom: 2px solid gray !important;
        color: #D73925;
        /*font-family: 'Bebas Neue'*/
    }
</style>
<div class="page page-forms-elements">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Operational Transaction List</h4>
                    <div class="box-tools">
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {
                            <button type="button" class="btn btn-info btn-sm waves-effect" data-toggle="modal" onclick="AddOperationalTransaction()"><i class="fa fa-plus"></i>Add New Operational Transaction</button>
                        }
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="col-md-1 col-md-offset-2 control-label">
                                <span class="pull-right">Country</span>
                            </label>
                            <div class="col-md-2">
                                @Html.HiddenFor(x => x.FirstOrDefault().CountryName)
                                @Html.DropDownListFor(x => x.FirstOrDefault().Country,
                                     new SelectList((List<EZY.EDU.Contract.Branch>)ViewData["CountryData"], "BranchId", "BranchName"),
                                 "Select Country", new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Year</span>
                            </label>
                            <div class="col-md-1">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Year, Enumerable.Range(2014, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), "Select Year ", new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Month</span>
                            </label>
                            <div class="col-md-1">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Month, listMonths, new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                            </div>
                        </div>
                    </div>
                    <div class="row css25">
                        <div class="col-md-8 col-md-offset-2 ">
                            <div id="gridContent">
                                @grid.GetHtml(
                                columns: grid.Columns(

                                      grid.Column("", "#Action", canSort: false,
                                    format:
                                    @<text>
                                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                        {
                                            <button class="btn btn-xs btn-success waves-effect" onclick="EditOperationalTransaction(@item.OperationalTransactionId)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                            <button class="btn btn-xs btn-danger waves-effect" onclick="DeleteOperationalTransaction(@item.OperationalTransactionId)"><i class="fa fa-trash-o" style="padding-left: 5px;"></i></button>
                                        }
                                    </text>),

                                grid.Column("CategoryIdDesc", "Category", canSort: true),
                                grid.Column("ParticularsIdDesc", "Particulars", canSort: true),
                        grid.Column("Amount", "Amount", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:88px;'>
                                            <span class="center">
                                                @ConvertToInt64dollar(item.Amount)
                                            </span>
                                        </div>
                                    </text>)),
                                tableStyle: "table table-striped table-bordered")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="pull-right">@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("SaveOperationalTransaction", "OperationalTransaction", FormMethod.Post, new { id = "frmOperationalTransaction", name = "frmOperationalTransaction" }))
{
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}

@using (Html.BeginForm("DeleteOperationalTransaction", "OperationalTransaction", FormMethod.Post, new { id = "frmOperationalTransactionDelete", name = "frmOperationalTransactionDelete" }))
{
    <input type="hidden" id="operationalTransactionId" name="operationalTransactionId" />
}
@section SectionScripts
    {
    <script type="text/javascript">

        $(function () {
            @if (Session["UserID"].ToString().ToUpper() != "ADMIN")
            {
                <text>
                    $('#Country').attr('disabled','disabled');
                 </text>
            }
            $('#liOperationalTransactionList').addClass('active');
            var totalAmount = "$ " + @ViewData["totalAmount"].ToString();
            @if (count > 0)
        {
            <text>
            $('#gridContent tbody').append('<tr class="bordertop"><td></td><td>Total Opex</td><td></td><td class="center">' + totalAmount + '</td><td></td><tr>');
             </text>
             }
        });
        function ChangeMonth() {
            window.location = '@Url.Action("OperationalTransactionList", "OperationalTransaction", new { month = "", year = "" })' + '?month=' + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val();
        };

        function AddOperationalTransaction() {
            if ($('#frmOperationalTransaction').valid()) {
                location.href = '@Url.Content("~/OperationalTransaction/OperationalTransaction?operationalTransactionId=")' + "-1&month=" + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val();
            }
        }

        @*function GetParticularsByCategory(Id) {
            debugger;
            if (Id.value) {
                debugger;
                $.ajax({
                    url: '@Url.Content("~/OperationalTransaction/GetParticularsByCategory?CategoryId=")' + Id.value + "&month=" + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val(),
                    method: 'get',
                    contentType: 'text/html',
                    success: function (data) {
                        debugger;
                        $('#ParticularsId').empty();
                        $('#ParticularsId').append($('<option></option>').val('').html(''));
                        $.each(data, function (key, value) {
                            $('#ParticularsId').append($('<option></option>').val(value.LookupID).html(value.LookupDescription));
                        });
                        $('#ParticularsId').removeAttr('disabled');
                    },
                    error: function (err) {

                    }
                });
            }

            else {
                $('#ParticularsId').empty();
                $('#ParticularsId').attr('disabled', 'disabled');
                $('#ParticularsId').append($('<option></option>').val('').html(''));
            }
        }*@

        @*function EditOperationalTransaction(Id) {
            $.ajax({
                url: '@Url.Content("~/OperationalTransaction/OperationalTransaction?operationalTransactionId=")' + Id + "&month=" + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val(),
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    debugger;
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            });
        }*@
        function DeleteOperationalTransaction(Id) {
            debugger;
            swal({
                title: "Are you sure?",
                text: "Do you want delete?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
            },
       function () {
           $('#operationalTransactionId').val(Id);
           $('#frmOperationalTransactionDelete').submit();
           swal("Deleted!", "Your Operational Transaction record has been deleted.", "success");

       });
        }

        function SaveOperationalTransaction() {
            debugger;
            if ($('#frmOperationalTransaction').valid()) {
                $('#CountryName').val($("#Country option:selected").text());
                $('#frmOperationalTransaction').submit();
            }
        }

        $('#frmOperationalTransaction').validate({
            rules: {
                Country: {
                    required: true
                },
                CategoryId: {
                    required: true
                },
                ParticularsId: {
                    required: true
                },
                Amount: {
                    required: true
                },

            }
        });


    </script>
}
