@using System.Globalization;
@model IEnumerable<EDU.Web.ViewModels.OperationalTransactionModel.OperationalTransactionVM>
@{
    ViewBag.Title = "OperationalTransactionList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var grid = new WebGrid(Model, rowsPerPage: 50);
    grid.Pager(WebGridPagerModes.All);

    var count = Model.Count();
}
@functions {

    public string ConvertToInt64dollar(decimal? data)
    {
        if (data != null && data > 0)
            return new HtmlString("$ " + Convert.ToInt64(data.Value)).ToString();
        else
            return null;
    }
}
@{

    var listMonths = new List<SelectListItem>()
                                          {

                                           new SelectListItem {Text = "January",   Value = "1"},
                                           new SelectListItem {Text = "February", Value = "2"},
                                           new SelectListItem {Text = "March", Value = "3"},
                                           new SelectListItem {Text = "April",   Value = "4"},
                                           new SelectListItem {Text = "May", Value = "5"},
                                           new SelectListItem {Text = "June", Value = "6"},
                                           new SelectListItem {Text = "July",   Value = "7"},
                                           new SelectListItem {Text = "August", Value = "8"},
                                           new SelectListItem {Text = "September", Value = "9"},
                                           new SelectListItem {Text = "October",   Value = "10"},
                                           new SelectListItem {Text = "November", Value = "11"},
                                           new SelectListItem {Text = "December", Value = "12"}
                                       };


}
<style>
    .bordertop {
        border-top: 2px solid gray !important;
        border-bottom: 2px solid gray !important;
        color: #D73925;
        /*font-family: 'Bebas Neue'*/
    }

    .center {
        text-align: center !important;
    }
</style>
<div class="page page-forms-elements">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Operational Transaction List</h4>
                    <div class="box-tools">
                        @if (Session["RoleCode"].ToString() == "ADMIN" || Session["RoleCode"].ToString() == "FINANCE")
                        {
                            if (Model.FirstOrDefault() == null)
                            {
                                <button type="button" id="btnAdd" class="btn btn-info btn-sm waves-effect" onclick="AddOperationalTransaction()"><i class="fa fa-plus"></i>Add Operational Transactions</button>
                            }
                            else
                            {
                                <button type="button" id="btnAdd" class="btn btn-info btn-sm waves-effect" onclick="AddOperationalTransaction()"><i class="fa fa-pencil"></i>Update Operational Transactions</button>
                            }
                        }
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="col-md-1 col-md-offset-2 control-label">
                                <span class="pull-right">Country</span>
                            </label>
                            <div class="col-md-2">
                                @Html.HiddenFor(x => x.FirstOrDefault().CountryName)
                                @Html.HiddenFor(x => x.FirstOrDefault().OperationId)
                                @Html.DropDownListFor(x => x.FirstOrDefault().Country,
                                     new SelectList((List<EZY.EDU.Contract.Branch>)ViewData["CountryData"], "BranchId", "BranchName"), new { @class = "form-control input-sm", onchange = "ChangeMonth();" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Year</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Year, Enumerable.Range(2014, 14).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:60%" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Month</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.FirstOrDefault().Month, listMonths, new { @class = "form-control input-sm", onchange = "ChangeMonth();", @style = "width:60%" })
                            </div>
                        </div>
                    </div>
                    <div class="row css25">
                        <div class="col-md-8 col-md-offset-2 ">
                            <div id="gridContent">
                                @grid.GetHtml(
                                columns: grid.Columns(
                                grid.Column("CategoryIdDesc", "Category", canSort: true),
                                grid.Column("ParticularsIdDesc", "Particulars", canSort: true),
                                grid.Column("Amount", "Amount", canSort: true,
                                     format:
                                    @<text>
                                        <div style='width:100%;'>
                                            <span class="center">
                                                @ConvertToInt64dollar(item.Amount)
                                            </span>
                                        </div>
                                    </text>, style: "center")),
                                tableStyle: "table table-striped table-bordered")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section SectionScripts
    {
    <script type="text/javascript">

        $(function () {

            @if (Model.Count() > 0 && Model.FirstOrDefault().OperationId == -1)
            {
                if (Session["AccessRights"].ToString() == "false")
                {
                <text>
                    $("#Country").select2().select2("val", @Session["BranchId"].ToString());
                    $('#Country').attr('disabled', 'disabled');
                </text>
                }
            }
            else
            {
                if (Session["AccessRights"].ToString() == "false")
                {
                <text>
                    $('#Country').attr('disabled', 'disabled');
                </text>
                }
            }

            $('#liOperationalTransactionList').addClass('active');
            var totalAmount = "$ " + @ViewData["totalAmount"].ToString();
            @if (count > 0)
        {
            <text>
            $('#gridContent tbody').append('<tr class="bordertop"><td>Total Opex</td><td></td><td class="center">' + totalAmount + '</td><tr>');
             </text>
             }
        });
        function ChangeMonth() {
            debugger;
            window.location = '@Url.Action("OperationalTransactionList", "OperationalTransaction", new { month = "", year = "" })' + '?month=' + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val();
        };

        function AddOperationalTransaction() {
            var operationId = $('#OperationId').val() == '' ? -1 : $('#OperationId').val();
            debugger;
            location.href = '@Url.Content("~/OperationalTransaction/OperationalTransaction?operationId=")' + operationId+"&month=" + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val();

            @*if ($('#frmOperationalTransaction').valid()) {
                location.href = '@Url.Content("~/OperationalTransaction/OperationalTransaction?operationId=")' + "-1&month=" + $('#Month').val() + "&year=" + $('#Year').val() + "&country=" + $('#Country').val();
            }*@
        }



        //$('#frmOperationalTransaction').validate({
        //    rules: {
        //        Country: {
        //            required: true
        //        },
        //        CategoryId: {
        //            required: true
        //        },
        //        ParticularsId: {
        //            required: true
        //        },
        //        Amount: {
        //            required: true
        //        },

        //    }
        //});


    </script>
}
