@model IEnumerable<EZY.EDU.Contract.CourseVm>
@{
    ViewBag.Title = "CourseList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    WebGrid grid = new WebGrid(Model, rowsPerPage: 15);
    grid.Pager(WebGridPagerModes.All);
}
@functions {
    public string ConvertToInt64dollar(decimal? data)
    {
        if (data != null && data > 0)
            return new HtmlString("$ " + Convert.ToInt64(data.Value)).ToString();
        else
            return "N/A";
    }
}
<div class="page">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Course List</h4>
                    <div class="box-tools">
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {
                            <button type="button" class="btn btn-info btn-sm waves-effect" data-toggle="modal" onclick="AddCourse()"><i class="fa fa-plus"></i>Add New Course</button>
                        }
                    </div>
                </div>
                <div class="box-body">

                    <div>
                        @grid.GetHtml(
                                columns: grid.Columns(

                                      grid.Column("", "#Action", canSort: false,
                                format:
                                @<text>
                                    @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                                    {
                                        <button class="btn btn-xs btn-success waves-effect" id="btnEdit_@item.Id" data-cname="@item.CourseName.TrimEnd()" onclick="EditCourse(@item.Id)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                        <button class="btn btn-xs btn-danger waves-effect" onclick="DeleteEduCourse(@item.Id)"><i class="fa fa-trash-o" style="padding-left: 5px;"></i></button>
                                    }
                                </text>),

                     grid.Column("CountryName", "Country", canSort: true),
                    grid.Column("ProductName", "Product", canSort: true),
                    grid.Column("CourseName", "Course Name", canSort: true),
                    grid.Column("NoOfDays", "No Of Days",
                    format:
                    @<text>
                        <div style='width:80px;'>
                            @item.NoOfDays
                        </div>
                    </text>
                    , canSort: true, style: "center"),
                    grid.Column("PublicPrice", "Public Price", format: @<text>
                                        <span class="display-mode">@ConvertToInt64dollar(item.PublicPrice) </span>
                    </text>, style: "", canSort: true),
                    grid.Column("PrivatePrice", "Private Price", format: @<text>
                                        <span class="display-mode">@ConvertToInt64dollar(item.PrivatePrice) </span>
                    </text>, style: "", canSort: true)),
                                tableStyle: "table")
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="pull-right">@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .center {
        text-align: center !important
    }
</style>
@using (Html.BeginForm("DeleteEduCourse", "Master", FormMethod.Post, new { id = "frmDelete", name = "frmDelete" }))
{
    <input type="hidden" id="id" name="id" />
}
@using (Html.BeginForm("SaveCourse", "Master", FormMethod.Post, new { id = "frmCourse", name = "frmCourse", autocomplete = "off" }))
{
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}

@section SectionScripts
    {
    <script type="text/javascript">
        $(function () {
            $('#liCourse').addClass('active');
        });
        function AddCourse() {
            debugger;
            $.ajax({
                url: '@Url.Content("~/Master/Course")',
                method: 'get',
                contentType: 'text/html',
                success: function(html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function(err) {

                }
            });
        }
        function EditCourse(Id) {
            debugger;
            var cname = $('#btnEdit_' + Id).data('cname');
            $.ajax({
                url: '@Url.Content("~/Master/Course?Id=")' + Id,
                method: 'get',
                contentType: 'text/html',
                success: function(html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                    $('#Country, #Product').attr('disabled', 'disabled');
                    $('#cname').val(cname);
                },
                error: function(err) {

                }
            });
        }
        function DeleteEduCourse(Id) {
            debugger;
            //if (confirm("Are you sure, do you want delete?")) {
            //    $('#id').val(Id);
            //    $('#frmDelete').submit();
            //}
            swal({
                title: "Are you sure?",
                text: "Do you want delete?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
                },
        function() {
            $('#id').val(Id);
            $('#frmDelete').submit();
                swal("Deleted!", "Your Course has been deleted.", "success");

            });
        }

        function SaveCourse() {
            debugger;
            if ($('#frmCourse').valid()) {
                $('#CourseName').removeAttr('disabled');
                $('#Country').removeAttr('disabled');
                $('#Product').removeAttr('disabled');
                $('#frmCourse').submit();
            }
            //var cName = '';
            //if ($('#CourseDescription').val() != null && $('#CourseDescription').val() != '') {
            //    cName = $('#CourseDescription').val();
            //}
            //else {
            //    cName = $('#CourseName').val() == null ? '' : $('#CourseName').val();
            //}
            //var country = $('#Country').val() == null ? '' : $('#Country').val();
            //var product = $('#Product').val() == null ? '' : $('#Product').val();

            //if (cName != '' && country != '' && product != '')
            //{
            //    if ($('#Id').val() == '-1') {
            //        var promise = ValidateByCourseName();
            //        $.when(promise).done(function(result) {
            //            if (result == "False")
            //            {
            //                if ($('#frmCourse').valid()) {
            //                    $('#CourseName').removeAttr('disabled');
            //                    $('#Country').removeAttr('disabled');
            //                    $('#Product').removeAttr('disabled');
            //                    $('#frmCourse').submit();
            //                }
            //            }
            //            else
            //            {
            //                if (result == "True")
            //                {
            //                    alert("Course already exists with the combination of country and Product. Please re-enter new course.");
            //                    $('#CourseName').val('');
            //                    if ($('#frmCourse').valid()) {
            //                        //$('#frmCourse').submit();
            //                    }
            //                }
            //            }
            //        });
            //    }
            //    else {
            //        if ($('#frmCourse').valid()) {
            //            $('#CourseName').removeAttr('disabled');
            //            $('#Country').removeAttr('disabled');
            //            $('#Product').removeAttr('disabled');
            //            $('#frmCourse').submit();
            //        }
            //    }
            //}
            //else
            //{
            //    if ($('#frmCourse').valid()) {
            //        debugger;
            //        //$('#frmCourse').submit();
            //    }
            //}
        };
        $('#frmCourse').validate({
            rules:
            {
                Country:
                {
                    required: true
                    },
                Product:
                {
                    required: true
                },
                CourseName:
                {
                    required: true,
                    maxlength: 255
                },
                CourseDescription:
                {
                    required: true,
                    maxlength: 255
                },
                NoOfDays:
                {
                    required: true,
                    maxlength: 4
                },
                PublicPrice:
                {
                    validatePrices: true
                },
                PrivatePrice:
                {
                    validatePrices: true
                }
            }
        });
        $.validator.addMethod('validatePrices', function (value, element, param) {
            var PublicPrice = parseFloat($('#PublicPrice').val());
            var PrivatePrice = parseFloat($('#PrivatePrice').val());
            if ((isNaN(PublicPrice) || PublicPrice == 0) && (isNaN(PrivatePrice) || PrivatePrice == 0))
            {
                return false;
            }
            else
                return true;
        }, 'Your error message!');
        function SaveEduProduct() {
            debugger;
            if ($('#frmEduProduct').valid()) {
                $('#frmEduProduct').submit();
            }
        };

        function ValidateByCourseName() {
            if ($('#cname').val() == $('#CourseName').val() && $('#id').val() != -1)
            { }
            else {
                var def = $.Deferred();
                $.ajax({
                    url: '@Url.Content("~/Master/IsEduCourseExists?courseName=")' + $('#CourseName').val() + '&country=' + $('#Country').val() + '&product=' + $('#Product').val(),
                    method: 'get',
                    contentType: 'text/html',
                    success: function(result) {
                        def.resolve(result);
                    }
                });
                return def.promise();
            }
        };

        function CountryChange(el) {
            $('#Product').val('');
            $('#CourseName').empty();
            $('#CourseName').append($('<option></option>').val('').html(''));
        }

        function ProductChange(el) {
            if (el.value) {
                $.ajax({
                    url: '@Url.Content("~/Master/GetCoursesByProductCoutry?Id=")' + el.value + '&country=' + $('#Country').val(),
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (data) {
                        debugger;
                        $('#CourseName').empty();
                        $('#CourseName').append($('<option></option>').val('').html(''));
                        $('#NoOfDays').val('');
                        $.each(data, function (key, value) {
                            $('#CourseName').append($('<option></option>').val(value.Id).html(value.CourseName));
                        });
                        $('#CourseName').removeAttr('disabled');
                    },
                    error: function (err) {

                    }
                });
            }
            else {
                $('#CourseName').empty();
                $('#CourseName').attr('disabled', 'disabled');
                $('#CourseName').append($('<option></option>').val('').html(''));
                $('#NoOfDays').val('');
            }
        }

        function CourseChangeWrapper(val) {
            if (val) {
                $.ajax({
                    url: '@Url.Content("~/Master/GetCourse?Id=")' + val,
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (data) {
                        $('#NoOfDays').val(data.NoOfDays);
                    },
                    error: function (err) {
                    }
                });
            }
            else
                $('#NoOfDays').val('');
        }

        function CourseChange(el) {
            debugger;
            CourseChangeWrapper(el.value);
        }

        function ValidateCourseName(isBlur) {
            var promise = ValidateByCourseName();
            $.when(promise).done(function(result) {
                if (isBlur)
                {
                    if (result == "True")
                    {
                        alert("Course already exists with the combination of country and Product. Please re-enter new course.");
                        $('#CourseName').val('');
                    }
                }
                else
                {
                    return result
                    }
            });
        };
    </script>
}
<style>
    .Grid-Footer > td {
        padding-top: 10px;
        text-align: right;
        margin-bottom: 10px;
    }

        .Grid-Footer > td > a {
            background: #fff;
            display: inline-block;
            border-radius: 1px;
            padding: 6px 12px;
            font-size: 16px;
            cursor: pointer;
            border: 2px solid #eeeeee;
        }

            .Grid-Footer > td > a:hover {
                color: #3f51b5;
                text-decoration: none;
            }
</style>