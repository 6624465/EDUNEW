@model IEnumerable<EZY.EDU.Contract.CourseVm>
@{
    ViewBag.Title = "CourseList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@functions {
    public string ConvertToInt64dollar(decimal? data)
    {
        if (data != null && data > 0)
            return new HtmlString("$ " + Convert.ToInt64(data.Value)).ToString();
        else
            return "N/A";
    }
}
<style>
    
</style>
<div class="page">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Course List</h4>
                    <div class="box-tools">
                        @if (Session["RoleCode"].ToString() == "ADMIN" || Session["RoleCode"].ToString() == "REGIONAL")
                        {
                            <button type="button" class="btn btn-info btn-sm waves-effect" data-toggle="modal" onclick="AddCourse()"><i class="fa fa-plus"></i>Add Regional Costing</button>
                        }
                    </div>
                </div>
                <div class="box-body">
                    <div class="css10 table-responsive">
                        <table class="table-bordered tblSearch" id="tblCourse" style="white-space:nowrap">
                            <thead>
                                <tr>
                                    <td style='width:60px;'>#Action</td>
                                    <td style='width:150px;'>Country</td>
                                    <td style='width:150px;'>Product</td>
                                    <td style='width:200px;'>Course Name</td>
                                    <td style='width:100px;'>No Of Days</td>
                                    <td style='width:100px;'>Public Price</td>
                                    <td style='width:100px;'>Private Price</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                                @if (Session["RoleCode"].ToString() == "ADMIN" || Session["RoleCode"].ToString() == "REGIONAL")
                                                {
                                                    <button class="btn btn-xs btn-success waves-effect" id="btnEdit_@item.Id" data-cname="@item.CourseName.TrimEnd()" onclick="EditCourse(@item.Id)"><i class="fa fa-pencil-square-o" style="padding-left: 5px;"></i></button>
                                                    <button class="btn btn-xs btn-danger waves-effect" onclick="DeleteEduCourse(@item.Id)"><i class="fa fa-trash-o" style="padding-left: 5px;"></i></button>
                                                }
                                        </td>
                                        <td>
                                            @item.CountryName
                                        </td>
                                        <td>
                                            @item.ProductName
                                        </td>
                                        <td>
                                           @item.CourseName
                                        </td>
                                        <td class="center">
                                            @item.NoOfDays
                                        </td>
                                        <td class="center">
                                            @ConvertToInt64dollar(item.PublicPrice)
                                        </td>
                                        <td class="center">
                                            @ConvertToInt64dollar(item.PrivatePrice)
                                        </td>
                                    </tr>
                                }
                            </tbody>                            
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .center {
        text-align: center !important;
    }
</style>
@using (Html.BeginForm("DeleteEduCourse", "Master", FormMethod.Post, new { id = "frmDelete", name = "frmDelete" }))
{
    <input type="hidden" id="id" name="id" />
}
@using (Html.BeginForm("SaveCourse", "Master", FormMethod.Post, new { id = "frmCourse", name = "frmCourse", autocomplete = "off" }))
{
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}

@section SectionScripts
    {
    <script type="text/javascript">
        $(function () {
            debugger;
            $('#liCourse').addClass('active');
        });

        function AddCourse() {
            debugger;
            $.ajax({
                url: '@Url.Content("~/Master/Course")',
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            });
        }
        function EditCourse(Id) {
            debugger;
            var cname = $('#btnEdit_' + Id).data('cname');
            $.ajax({
                url: '@Url.Content("~/Master/Course?Id=")' + Id,
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                    $('#Country, #Product').attr('disabled', 'disabled');
                    $('#cname').val(cname);
                },
                error: function (err) {

                }
            });
        }
        function DeleteEduCourse(Id) {
            debugger;
            //if (confirm("Are you sure, do you want delete?")) {
            //    $('#id').val(Id);
            //    $('#frmDelete').submit();
            //}
            swal({
                title: "Are you sure?",
                text: "Do you want delete?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
            },
        function () {
            $('#id').val(Id);
            $('#frmDelete').submit();
            swal("Deleted!", "Your Course has been deleted.", "success");

        });
        }

        function SaveCourse() {
            debugger;
            if ($('#frmCourse').valid()) {
                $('#CourseName').removeAttr('disabled');
                $('#Country').removeAttr('disabled');
                $('#Product').removeAttr('disabled');
                $('#frmCourse').submit();
            }
            //var cName = '';
            //if ($('#CourseDescription').val() != null && $('#CourseDescription').val() != '') {
            //    cName = $('#CourseDescription').val();
            //}
            //else {
            //    cName = $('#CourseName').val() == null ? '' : $('#CourseName').val();
            //}
            //var country = $('#Country').val() == null ? '' : $('#Country').val();
            //var product = $('#Product').val() == null ? '' : $('#Product').val();

            //if (cName != '' && country != '' && product != '')
            //{
            //    if ($('#Id').val() == '-1') {
            //        var promise = ValidateByCourseName();
            //        $.when(promise).done(function(result) {
            //            if (result == "False")
            //            {
            //                if ($('#frmCourse').valid()) {
            //                    $('#CourseName').removeAttr('disabled');
            //                    $('#Country').removeAttr('disabled');
            //                    $('#Product').removeAttr('disabled');
            //                    $('#frmCourse').submit();
            //                }
            //            }
            //            else
            //            {
            //                if (result == "True")
            //                {
            //                    alert("Course already exists with the combination of country and Product. Please re-enter new course.");
            //                    $('#CourseName').val('');
            //                    if ($('#frmCourse').valid()) {
            //                        //$('#frmCourse').submit();
            //                    }
            //                }
            //            }
            //        });
            //    }
            //    else {
            //        if ($('#frmCourse').valid()) {
            //            $('#CourseName').removeAttr('disabled');
            //            $('#Country').removeAttr('disabled');
            //            $('#Product').removeAttr('disabled');
            //            $('#frmCourse').submit();
            //        }
            //    }
            //}
            //else
            //{
            //    if ($('#frmCourse').valid()) {
            //        debugger;
            //        //$('#frmCourse').submit();
            //    }
            //}
        };
        $('#frmCourse').validate({
            rules:
            {
                Country: "required",
                Product: "required",
                CourseName:
                {
                    required: true,
                    maxlength: 255
                },
                CourseDescription:
                {
                    required: true,
                    maxlength: 255
                },
                NoOfDays:
                {
                    required: true,
                    maxlength: 4
                },
                PublicPrice:
                {
                    validatePrices: true
                },
                PrivatePrice:
                {
                    validatePrices: true
                }
            },
            highlight: function (element, errorClass, validClass) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass(errorClass);
                } else {
                    elem.addClass(errorClass);
                }
            },
            unhighlight: function (element, errorClass, validClass) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass(errorClass);
                } else {
                    elem.removeClass(errorClass);
                }
            },
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
            }

        });


        $.validator.addMethod('validatePrices', function (value, element, param) {
            var PublicPrice = parseFloat($('#PublicPrice').val());
            var PrivatePrice = parseFloat($('#PrivatePrice').val());
            if ((isNaN(PublicPrice) || PublicPrice == 0) && (isNaN(PrivatePrice) || PrivatePrice == 0)) {
                return false;
            }
            else
                return true;
        }, 'Your error message!');
        function SaveEduProduct() {
            debugger;
            if ($('#frmEduProduct').valid()) {
                $('#frmEduProduct').submit();
            }
        };

        function ValidateByCourseName() {
            if ($('#cname').val() == $('#CourseName').val() && $('#id').val() != -1)
            { }
            else {
                var def = $.Deferred();
                $.ajax({
                    url: '@Url.Content("~/Master/IsEduCourseExists?courseName=")' + $('#CourseName').val() + '&country=' + $('#Country').val() + '&product=' + $('#Product').val(),
                    method: 'get',
                    contentType: 'text/html',
                    success: function (result) {
                        def.resolve(result);
                    }
                });
                return def.promise();
            }
        };

        function CountryChange(el) {
            $("#Product").select2().select2("val", '');
            $('#CourseName').select2().empty();
            //$('#CourseName').append($('<option></option>').val('').html(''));
        }

        function ProductChange(el) {
            if (el.value) {
                $.ajax({
                    url: '@Url.Content("~/Master/GetCoursesByProductCoutry?Id=")' + el.value + '&country=' + $('#Country').val(),
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (data) {
                        debugger;
                        $('#CourseName').select2().empty();
                        $('#CourseName').select2().append($('<option></option>').val('').html(''));
                        $('#NoOfDays').val('');
                        $.each(data, function (key, value) {
                            debugger;
                            $('#CourseName').select2().append($('<option></option>').val(value.Id).html(value.CourseName));
                        });
                        $('#CourseName').removeAttr('disabled');
                    },
                    error: function (err) {

                    }
                });
            }
            else {
                $('#CourseName').select2().empty();
                $('#CourseName').attr('disabled', 'disabled');
                $('#CourseName').append($('<option></option>').val('').html(''));
                $('#NoOfDays').val('');
            }
        }

        function CourseChangeWrapper(val) {
            if (val) {
                $.ajax({
                    url: '@Url.Content("~/Master/GetCourse?Id=")' + val,
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (data) {
                        $('#NoOfDays').val(data.NoOfDays);
                    },
                    error: function (err) {
                    }
                });
            }
            else
                $('#NoOfDays').val('');
        }

        function CourseChange(el) {
            debugger;
            CourseChangeWrapper(el.value);
        }

        function ValidateCourseName(isBlur) {
            var promise = ValidateByCourseName();
            $.when(promise).done(function (result) {
                if (isBlur) {
                    if (result == "True") {
                        alert("Course already exists with the combination of country and Product. Please re-enter new course.");
                        $('#CourseName').val('');
                    }
                }
                else {
                    return result
                }
            });
        };
    </script>
}
