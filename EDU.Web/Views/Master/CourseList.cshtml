@model IEnumerable<EZY.EDU.Contract.CourseVm>
@{
    ViewBag.Title = "CourseList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page">
    <div class="box box-primary panel-hovered panel">
        <div class="box-header">
            <h4 class="box-title"><i class="ion ion-ios-book"></i>&nbsp;Course List</h4>
            <div class="box-tools">
                <button type="button" class="btn btn-info btn-lg" data-toggle="modal" onclick="AddCourse()">Add New Course</button>
            </div>
        </div>
        <div class="box-body">
            <table class="table table-condensed table-bordered" id="tblProducts">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Course Name</th>
                        <th style="text-align:center">No Of Days</th>
                        <th>Country</th>
                        <th style="text-align:center">Public Price</th>
                        <th style="text-align:center">Private Price</th>
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {
                            <th>#Action</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Count(); i++)
                    {
                        <tr>
                            <td>@Model.ElementAt(i).ProductName</td>
                            <td>@Model.ElementAt(i).CourseName</td>
                            <td align="center">@Model.ElementAt(i).NoOfDays</td>
                            <td>@Model.ElementAt(i).CountryName</td>
                            <td align="center">@(Model.ElementAt(i).PublicPrice.ToString("0.00") == "0.00" ? "N/A" : Model.ElementAt(i).PublicPrice.ToString("0.00"))</td>
                            <td align="center">@(Model.ElementAt(i).PrivatePrice.ToString("0.00") == "0.00" ? "N/A" : Model.ElementAt(i).PrivatePrice.ToString("0.00"))</td>
                            @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                            {
                                <td>
                                    <button class="btn btn-success waves-effect btn-xs" onclick="EditCourse(@Model.ElementAt(i).Id)"><i class="fa fa-pencil-square-o"></i></button>
                                    <button class="btn btn-danger waves-effect btn-xs" onclick="DeleteEduCourse(@Model.ElementAt(i).Id)"><i class="fa fa-trash-o"></i></button>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@using (Html.BeginForm("DeleteEduCourse", "Master", FormMethod.Post, new { id = "frmDelete", name = "frmDelete" }))
{
    <input type="hidden" id="id" name="id" />
}
@using (Html.BeginForm("SaveCourse", "Master", FormMethod.Post, new { id = "frmCourse", name = "frmCourse" }))
{
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}

@section SectionScripts{
    <script type="text/javascript">
        $(function () {
            $('#liCourse').addClass('active');
        });
        function AddCourse() {
            debugger;
            $.ajax({
                url: '@Url.Content("~/Master/Course")',
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            });
        }
        function EditCourse(Id) {
            $.ajax({
                url: '@Url.Content("~/Master/Course?Id=")' + Id,
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                },
                error: function (err) {

                }
            });
        }
        function DeleteEduCourse(Id) {
            debugger;
            if (confirm("Are you sure, do you want delete?")) {
                $('#id').val(Id);
                $('#frmDelete').submit();
            }
        }

        function SaveCourse() {
            debugger;
            var cName = $('#CourseName').val() == null ? '' : $('#CourseName').val();
            var country = $('#Country').val() == null ? '' : $('#Country').val();
            var product = $('#Product').val() == null ? '' : $('#Product').val();

            if (cName != '' && country != '' && product != '') {
                if ($('#Id').val() == '-1') {
                    var promise = ValidateByCourseName();
                    $.when(promise).done(function (result) {
                        if (result == "False") {
                            if ($('#frmCourse').valid()) {
                                $('#CourseName').removeAttr('disabled');
                                $('#Country').removeAttr('disabled');
                                $('#Product').removeAttr('disabled');
                                $('#frmCourse').submit();
                            }
                        }
                        else {
                            if (result == "True") {
                                alert("Course already exists with the combination of country and Product. Please re-enter new course.");
                                $('#CourseName').val('');
                                if ($('#frmCourse').valid()) {
                                    //$('#frmCourse').submit();
                                }
                            }
                        }
                    });
                }
                else {
                    if ($('#frmCourse').valid()) {
                        $('#CourseName').removeAttr('disabled');
                        $('#Country').removeAttr('disabled');
                        $('#Product').removeAttr('disabled');
                        $('#frmCourse').submit();
                    }
                }
            }
            else {
                if ($('#frmCourse').valid()) {
                    debugger;
                    //$('#frmCourse').submit();
                }
            }
        };
        $('#frmCourse').validate({
            rules: {
                Country: {
                    required: true
                },
                Product: {
                    required: true
                },
                CourseName: {
                    required: true,
                    maxlength: 255
                },
                CourseDescription: {
                    required: true,
                    maxlength: 255
                },
                NoOfDays: {
                    required: true,
                    maxlength: 4
                },
                PublicPrice: {
                    validatePrices: true
                },
                PrivatePrice: {
                    validatePrices: true
                }
            }
        });
        $.validator.addMethod('validatePrices', function (value, element, param) {
            var PublicPrice = parseFloat($('#PublicPrice').val());
            var PrivatePrice = parseFloat($('#PrivatePrice').val());
            if ((isNaN(PublicPrice) || PublicPrice == 0) && (isNaN(PrivatePrice) || PrivatePrice == 0)) {
                return false;
            }
            else
                return true;
        }, 'Your error message!');
        function SaveEduProduct() {
            debugger;
            if ($('#frmEduProduct').valid()) {
                $('#frmEduProduct').submit();
            }
        };
</script>
}