@model IEnumerable<EZY.EDU.Contract.EduProduct>
<div class="page">
    <div class="box box-primary panel-hovered panel">
        <div class="box-header">
            <h4 class="box-title"><i class="ion ion-ios-book"></i>&nbsp;Edu Product List</h4>
            <div class="box-tools">
                <button type="button" class="btn btn-info btn-sm" data-toggle="modal" onclick="AddEduProduct()">Add New Product</button>
            </div>
        </div>
        <div class="box-body">
            <table class="table table-condensed table-bordered" id="tblProducts">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                        {
                            <th>#Action</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Count(); i++)
                    {
                        <tr>
                            <td>@Model.ElementAt(i).ProductName</td>
                            @if (Session["UserID"].ToString().ToUpper() == "ADMIN")
                            {
                                <td>
                                    <button class="btn btn-success waves-effect btn-xs" onclick="EditEduProduct(@Model.ElementAt(i).Id)"><i class="fa fa-pencil-square-o"></i></button>
                                    <button class="btn btn-danger waves-effect btn-xs" onclick="DeleteProductCategory(@Model.ElementAt(i).Id)"><i class="fa fa-trash-o"></i></button>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@using (Html.BeginForm("DeleteEduProduct", "Master", FormMethod.Post, new { id = "frmDelete", name = "frmDelete" }))
{
    <input type="hidden" id="id" name="id" />
}
@using (Html.BeginForm("SaveEduProduct", "Master", FormMethod.Post, new { id = "frmEduProduct", name = "frmEduProduct" }))
{
    <div id="myModal" class="modal fade" role="dialog">

    </div>
}
@section SectionScripts{
    <script type="text/javascript">
        $(function () {
            debugger;
            $('#liEduProductList').addClass('active');
        });

        function AddEduProduct() {
            $.ajax({
                url: '@Url.Content("~/Master/EduProduct")',
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    debugger;
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                    $('#error').hide();
                },
                error: function (err) {

                }
            });
        }
        function DeleteProductCategory(Id) {
            if (confirm("Are you sure, do you want delete?")) {
                $('#id').val(Id);
                $('#frmDelete').submit();
            }
        }
        function EditEduProduct(Id) {
            $.ajax({
                url: '@Url.Content("~/Master/EduProduct?Id=")' + Id,
                method: 'get',
                contentType: 'text/html',
                success: function (html) {
                    $('#myModal').html(html);
                    $('#myModal').modal('show');
                    $('#error').hide();
                },
                error: function (err) {

                }
            });
        }

        debugger;
        $('#frmEduProduct').validate({
            rules: {
                ProductName:
                    {
                        required: true
                    }
            }
        })
        function SaveEduProduct() {
            debugger;
            if ($('#frmEduProduct').valid())
            {
                $('#frmEduProduct').submit();
            }
        };
        function ValidateByProductName() {
            var def = $.Deferred();
            $.ajax({
                url: '@Url.Content("~/Master/IsEduProductExists?productName=")' + $('#ProductName').val(),
                method: 'get',
                contentType: 'text/html',
                success: function (result) {
                    def.resolve(result);
                }
            });
            return def.promise();
        };


        function ValidateProductName(isBlur) {
            var promise = ValidateByProductName();
            $.when(promise).done(function (result) {
                if (isBlur) {
                    if (result == "True") {
                        debugger;
                        $('#error').show();
                        //alert("Product already exists. Please re-enter new product.");
                        $('#ProductName').val('');
                    }
                    else
                    {
                        $('#error').hide();
                    }
                }
                else {
                    return result
                }
            });
        };

    </script>
}

